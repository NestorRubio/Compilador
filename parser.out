Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM CREATE_DIRFUNC ID PTOCOMA VARS_P FUNCS_P MAIN_G
Rule 2     VARS -> VAR TYPE ID ADD_VAR VARS_PP PTOCOMA
Rule 3     VARS -> VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA
Rule 4     VARS_P -> VARS VARS_P
Rule 5     VARS_P -> empty
Rule 6     VARS_PP -> COMMA ID ADD_VAR VARS_PP
Rule 7     VARS_PP -> empty
Rule 8     MAT_AUX -> CORIZQ CTE_INT add_dim CORDER
Rule 9     MAT_AUX -> empty
Rule 10    FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc
Rule 11    FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc
Rule 12    FUNCS_P -> FUNCS FUNCS_P
Rule 13    FUNCS_P -> empty
Rule 14    TYPE -> INT CURR_TYPE
Rule 15    TYPE -> FLOAT CURR_TYPE
Rule 16    TYPE -> BOOL CURR_TYPE
Rule 17    TYPE -> CHAR CURR_TYPE
Rule 18    PARAMS -> TYPE ID ADD_VAR update_param_table PARAMS_P
Rule 19    PARAMS -> empty
Rule 20    PARAMS_P -> COMMA TYPE ID ADD_VAR update_param_table PARAMS_P
Rule 21    PARAMS_P -> empty
Rule 22    MAIN_G -> VOID MAIN set_start change_func PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER endProg
Rule 23    ESTATUTO -> ASIGNACION
Rule 24    ESTATUTO -> CONDICION
Rule 25    ESTATUTO -> LOOP_WHILE
Rule 26    ESTATUTO -> ESCRITURA
Rule 27    ESTATUTO -> LECTURA
Rule 28    ESTATUTO -> FUNC_CALL
Rule 29    ESTATUTO_P -> ESTATUTO ESTATUTO_P
Rule 30    ESTATUTO_P -> empty
Rule 31    ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
Rule 32    ASIGNACION -> VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
Rule 33    CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P
Rule 34    CONDICION_P -> ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end
Rule 35    CONDICION_P -> if_end
Rule 36    LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end
Rule 37    ESCRITURA -> PRINT PARIZQ PRINTABLE PARDER
Rule 38    PRINTABLE -> EXPRESION cuad_print PRINTABLE_P
Rule 39    PRINTABLE -> CTE_STR cuad_print_str PRINTABLE_P
Rule 40    PRINTABLE_P -> COMMA PRINTABLE
Rule 41    PRINTABLE_P -> empty
Rule 42    LECTURA -> READ PARIZQ ID cuad_read PARDER
Rule 43    FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
Rule 44    FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
Rule 45    PARM -> EXPRESION ver_param PARM_P
Rule 46    PARM -> empty
Rule 47    PARM_P -> COMMA EXPRESION ver_param PARM_P
Rule 48    PARM_P -> empty
Rule 49    EXPRESION -> EXPRE cuad_or OR pila_operadores_add EXPRESION
Rule 50    EXPRESION -> EXPRE cuad_or
Rule 51    EXPRE -> EXPR cuad_and AND pila_operadores_add EXPRE
Rule 52    EXPRE -> EXPR cuad_and
Rule 53    EXPR -> EXP cuad_comp EXPR_P
Rule 54    EXPR_P -> LT pila_operadores_add EXPR
Rule 55    EXPR_P -> GT pila_operadores_add EXPR
Rule 56    EXPR_P -> DIFF pila_operadores_add EXPR
Rule 57    EXPR_P -> LTE pila_operadores_add EXPR
Rule 58    EXPR_P -> GTE pila_operadores_add EXPR
Rule 59    EXPR_P -> EQUAL pila_operadores_add EXPR
Rule 60    EXPR_P -> empty
Rule 61    EXP -> TERM cuad_sumres EXP_P
Rule 62    EXP_P -> MAS pila_operadores_add EXP
Rule 63    EXP_P -> MENOS pila_operadores_add EXP
Rule 64    EXP_P -> empty
Rule 65    TERM -> FACTOR cuad_muldiv TERM_P
Rule 66    TERM_P -> MULT pila_operadores_add TERM
Rule 67    TERM_P -> DIV pila_operadores_add TERM
Rule 68    TERM_P -> empty
Rule 69    FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
Rule 70    FACTOR -> VAR_CTE
Rule 71    VAR_CTE -> ID pila_operando_id
Rule 72    VAR_CTE -> CTE_INT pila_operando_int
Rule 73    VAR_CTE -> CTE_FLT pila_operando_float
Rule 74    VAR_CTE -> CTE_CHAR pila_operando_char
Rule 75    VAR_CTE -> FUNC_CALL_EXP
Rule 76    VAR_CTE -> VAR_DIM
Rule 77    VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim
Rule 78    matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop
Rule 79    matAux -> empty
Rule 80    empty -> <empty>
Rule 81    CREATE_DIRFUNC -> <empty>
Rule 82    CURR_TYPE -> <empty>
Rule 83    ADD_VAR -> <empty>
Rule 84    ADD_FUNC -> <empty>
Rule 85    pila_operando_id -> <empty>
Rule 86    pila_operando_int -> <empty>
Rule 87    pila_operando_float -> <empty>
Rule 88    pila_operando_char -> <empty>
Rule 89    pila_operadores_add -> <empty>
Rule 90    fondo_falso_add -> <empty>
Rule 91    fondo_falso_pop -> <empty>
Rule 92    cuad_and -> <empty>
Rule 93    cuad_or -> <empty>
Rule 94    cuad_comp -> <empty>
Rule 95    cuad_sumres -> <empty>
Rule 96    cuad_muldiv -> <empty>
Rule 97    cuad_asign -> <empty>
Rule 98    cuad_read -> <empty>
Rule 99    cuad_return -> <empty>
Rule 100   ver_if -> <empty>
Rule 101   if_end -> <empty>
Rule 102   else_jump -> <empty>
Rule 103   add_jump -> <empty>
Rule 104   ver_while -> <empty>
Rule 105   while_end -> <empty>
Rule 106   cuad_print -> <empty>
Rule 107   cuad_print_str -> <empty>
Rule 108   change_func -> <empty>
Rule 109   update_param_table -> <empty>
Rule 110   func_jump -> <empty>
Rule 111   endFunc -> <empty>
Rule 112   ver_func_id_era -> <empty>
Rule 113   ver_func_id_era_exp -> <empty>
Rule 114   ver_param -> <empty>
Rule 115   ver_param_num -> <empty>
Rule 116   cuad_gosub -> <empty>
Rule 117   add_dim -> <empty>
Rule 118   actAddr -> <empty>
Rule 119   ver_dim -> <empty>
Rule 120   ver_dir_num -> <empty>
Rule 121   cuad_ver -> <empty>
Rule 122   cuad_var_dim -> <empty>
Rule 123   set_start -> <empty>
Rule 124   endProg -> <empty>

Terminals, with rules where they appear

AND                  : 51
ASIGN                : 31 32
BOOL                 : 16
CHAR                 : 17
COMMA                : 6 20 40 47
COMMENT              : 
CORDER               : 3 8 77 78
CORIZQ               : 3 8 77 78
CTE_CHAR             : 74
CTE_FLT              : 73
CTE_INT              : 3 8 72
CTE_STR              : 39
DIFF                 : 56
DIV                  : 67
ELSE                 : 34
EQUAL                : 59
FLOAT                : 15
FUNC                 : 10 11
GT                   : 55
GTE                  : 58
ID                   : 1 2 3 6 10 11 18 20 31 42 43 44 71 77
IF                   : 33
INT                  : 14
LLVEDER              : 10 11 22 33 34 36
LLVEIZQ              : 10 11 22 33 34 36
LT                   : 54
LTE                  : 57
MAIN                 : 22
MAS                  : 62
MENOS                : 63
MULT                 : 66
OR                   : 49
PARDER               : 10 11 22 33 36 37 42 43 44 69
PARIZQ               : 10 11 22 33 36 37 42 43 44 69
PRINT                : 37
PROGRAM              : 1
PTOCOMA              : 1 2 3 10 31 32
READ                 : 42
RETURN               : 10
VAR                  : 2 3
VOID                 : 11 22
WHILE                : 36
error                : 

Nonterminals, with rules where they appear

ADD_FUNC             : 10 11
ADD_VAR              : 2 3 6 18 20
ASIGNACION           : 23
CONDICION            : 24
CONDICION_P          : 33
CREATE_DIRFUNC       : 1
CURR_TYPE            : 11 14 15 16 17
ESCRITURA            : 26
ESTATUTO             : 29
ESTATUTO_P           : 10 11 22 29 33 34 36
EXP                  : 53 62 63
EXPR                 : 51 52 54 55 56 57 58 59
EXPRE                : 49 50 51
EXPRESION            : 10 31 32 33 36 38 45 47 49 69 77 78
EXPR_P               : 53
EXP_P                : 61
FACTOR               : 65
FUNCS                : 12
FUNCS_P              : 1 12
FUNC_CALL            : 28
FUNC_CALL_EXP        : 75
LECTURA              : 27
LOOP_WHILE           : 25
MAIN_G               : 1
MAT_AUX              : 3
PARAMS               : 10 11
PARAMS_P             : 18 20
PARM                 : 43 44
PARM_P               : 45 47
PRINTABLE            : 37 40
PRINTABLE_P          : 38 39
PROGRAMA             : 0
TERM                 : 61 66 67
TERM_P               : 65
TYPE                 : 2 3 10 18 20
VARS                 : 4
VARS_P               : 1 4
VARS_PP              : 2 6
VAR_CTE              : 70
VAR_DIM              : 32 76
actAddr              : 3
add_dim              : 3 8
add_jump             : 36
change_func          : 22
cuad_and             : 51 52
cuad_asign           : 31 32
cuad_comp            : 53
cuad_gosub           : 43 44
cuad_muldiv          : 65
cuad_or              : 49 50
cuad_print           : 38
cuad_print_str       : 39
cuad_read            : 42
cuad_return          : 10
cuad_sumres          : 61
cuad_var_dim         : 77
cuad_ver             : 77 78
else_jump            : 34
empty                : 5 7 9 13 19 21 30 41 46 48 60 64 68 79
endFunc              : 10 11
endProg              : 22
fondo_falso_add      : 43 44 69 77 78
fondo_falso_pop      : 43 44 69 77 78
func_jump            : 10 11
if_end               : 34 35
matAux               : 77
pila_operadores_add  : 31 32 49 51 54 55 56 57 58 59 62 63 66 67
pila_operando_char   : 74
pila_operando_float  : 73
pila_operando_id     : 31 71 77
pila_operando_int    : 72
set_start            : 22
update_param_table   : 18 20
ver_dim              : 77 78
ver_dir_num          : 77
ver_func_id_era      : 43
ver_func_id_era_exp  : 44
ver_if               : 33
ver_param            : 45 47
ver_param_num        : 43 44
ver_while            : 36
while_end            : 36

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM CREATE_DIRFUNC ID PTOCOMA VARS_P FUNCS_P MAIN_G

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . CREATE_DIRFUNC ID PTOCOMA VARS_P FUNCS_P MAIN_G
    (81) CREATE_DIRFUNC -> .

    ID              reduce using rule 81 (CREATE_DIRFUNC -> .)

    CREATE_DIRFUNC                 shift and go to state 3

state 3

    (1) PROGRAMA -> PROGRAM CREATE_DIRFUNC . ID PTOCOMA VARS_P FUNCS_P MAIN_G

    ID              shift and go to state 4


state 4

    (1) PROGRAMA -> PROGRAM CREATE_DIRFUNC ID . PTOCOMA VARS_P FUNCS_P MAIN_G

    PTOCOMA         shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM CREATE_DIRFUNC ID PTOCOMA . VARS_P FUNCS_P MAIN_G
    (4) VARS_P -> . VARS VARS_P
    (5) VARS_P -> . empty
    (2) VARS -> . VAR TYPE ID ADD_VAR VARS_PP PTOCOMA
    (3) VARS -> . VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA
    (80) empty -> .

    VAR             shift and go to state 9
    FUNC            reduce using rule 80 (empty -> .)
    VOID            reduce using rule 80 (empty -> .)

    VARS_P                         shift and go to state 6
    VARS                           shift and go to state 7
    empty                          shift and go to state 8

state 6

    (1) PROGRAMA -> PROGRAM CREATE_DIRFUNC ID PTOCOMA VARS_P . FUNCS_P MAIN_G
    (12) FUNCS_P -> . FUNCS FUNCS_P
    (13) FUNCS_P -> . empty
    (10) FUNCS -> . FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc
    (11) FUNCS -> . FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc
    (80) empty -> .

    FUNC            shift and go to state 13
    VOID            reduce using rule 80 (empty -> .)

    FUNCS_P                        shift and go to state 10
    FUNCS                          shift and go to state 11
    empty                          shift and go to state 12

state 7

    (4) VARS_P -> VARS . VARS_P
    (4) VARS_P -> . VARS VARS_P
    (5) VARS_P -> . empty
    (2) VARS -> . VAR TYPE ID ADD_VAR VARS_PP PTOCOMA
    (3) VARS -> . VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA
    (80) empty -> .

    VAR             shift and go to state 9
    FUNC            reduce using rule 80 (empty -> .)
    VOID            reduce using rule 80 (empty -> .)

    VARS                           shift and go to state 7
    VARS_P                         shift and go to state 14
    empty                          shift and go to state 8

state 8

    (5) VARS_P -> empty .

    FUNC            reduce using rule 5 (VARS_P -> empty .)
    VOID            reduce using rule 5 (VARS_P -> empty .)


state 9

    (2) VARS -> VAR . TYPE ID ADD_VAR VARS_PP PTOCOMA
    (3) VARS -> VAR . TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA
    (14) TYPE -> . INT CURR_TYPE
    (15) TYPE -> . FLOAT CURR_TYPE
    (16) TYPE -> . BOOL CURR_TYPE
    (17) TYPE -> . CHAR CURR_TYPE

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19

    TYPE                           shift and go to state 15

state 10

    (1) PROGRAMA -> PROGRAM CREATE_DIRFUNC ID PTOCOMA VARS_P FUNCS_P . MAIN_G
    (22) MAIN_G -> . VOID MAIN set_start change_func PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER endProg

    VOID            shift and go to state 21

    MAIN_G                         shift and go to state 20

state 11

    (12) FUNCS_P -> FUNCS . FUNCS_P
    (12) FUNCS_P -> . FUNCS FUNCS_P
    (13) FUNCS_P -> . empty
    (10) FUNCS -> . FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc
    (11) FUNCS -> . FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc
    (80) empty -> .

    FUNC            shift and go to state 13
    VOID            reduce using rule 80 (empty -> .)

    FUNCS                          shift and go to state 11
    FUNCS_P                        shift and go to state 22
    empty                          shift and go to state 12

state 12

    (13) FUNCS_P -> empty .

    VOID            reduce using rule 13 (FUNCS_P -> empty .)


state 13

    (10) FUNCS -> FUNC . TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc
    (11) FUNCS -> FUNC . VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc
    (14) TYPE -> . INT CURR_TYPE
    (15) TYPE -> . FLOAT CURR_TYPE
    (16) TYPE -> . BOOL CURR_TYPE
    (17) TYPE -> . CHAR CURR_TYPE

    VOID            shift and go to state 24
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19

    TYPE                           shift and go to state 23

state 14

    (4) VARS_P -> VARS VARS_P .

    FUNC            reduce using rule 4 (VARS_P -> VARS VARS_P .)
    VOID            reduce using rule 4 (VARS_P -> VARS VARS_P .)


state 15

    (2) VARS -> VAR TYPE . ID ADD_VAR VARS_PP PTOCOMA
    (3) VARS -> VAR TYPE . ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA

    ID              shift and go to state 25


state 16

    (14) TYPE -> INT . CURR_TYPE
    (82) CURR_TYPE -> .

    ID              reduce using rule 82 (CURR_TYPE -> .)

    CURR_TYPE                      shift and go to state 26

state 17

    (15) TYPE -> FLOAT . CURR_TYPE
    (82) CURR_TYPE -> .

    ID              reduce using rule 82 (CURR_TYPE -> .)

    CURR_TYPE                      shift and go to state 27

state 18

    (16) TYPE -> BOOL . CURR_TYPE
    (82) CURR_TYPE -> .

    ID              reduce using rule 82 (CURR_TYPE -> .)

    CURR_TYPE                      shift and go to state 28

state 19

    (17) TYPE -> CHAR . CURR_TYPE
    (82) CURR_TYPE -> .

    ID              reduce using rule 82 (CURR_TYPE -> .)

    CURR_TYPE                      shift and go to state 29

state 20

    (1) PROGRAMA -> PROGRAM CREATE_DIRFUNC ID PTOCOMA VARS_P FUNCS_P MAIN_G .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM CREATE_DIRFUNC ID PTOCOMA VARS_P FUNCS_P MAIN_G .)


state 21

    (22) MAIN_G -> VOID . MAIN set_start change_func PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER endProg

    MAIN            shift and go to state 30


state 22

    (12) FUNCS_P -> FUNCS FUNCS_P .

    VOID            reduce using rule 12 (FUNCS_P -> FUNCS FUNCS_P .)


state 23

    (10) FUNCS -> FUNC TYPE . ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc

    ID              shift and go to state 31


state 24

    (11) FUNCS -> FUNC VOID . CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc
    (82) CURR_TYPE -> .

    ID              reduce using rule 82 (CURR_TYPE -> .)

    CURR_TYPE                      shift and go to state 32

state 25

    (2) VARS -> VAR TYPE ID . ADD_VAR VARS_PP PTOCOMA
    (3) VARS -> VAR TYPE ID . ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA
    (83) ADD_VAR -> .

    CORIZQ          reduce using rule 83 (ADD_VAR -> .)
    COMMA           reduce using rule 83 (ADD_VAR -> .)
    PTOCOMA         reduce using rule 83 (ADD_VAR -> .)

    ADD_VAR                        shift and go to state 33

state 26

    (14) TYPE -> INT CURR_TYPE .

    ID              reduce using rule 14 (TYPE -> INT CURR_TYPE .)


state 27

    (15) TYPE -> FLOAT CURR_TYPE .

    ID              reduce using rule 15 (TYPE -> FLOAT CURR_TYPE .)


state 28

    (16) TYPE -> BOOL CURR_TYPE .

    ID              reduce using rule 16 (TYPE -> BOOL CURR_TYPE .)


state 29

    (17) TYPE -> CHAR CURR_TYPE .

    ID              reduce using rule 17 (TYPE -> CHAR CURR_TYPE .)


state 30

    (22) MAIN_G -> VOID MAIN . set_start change_func PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER endProg
    (123) set_start -> .

    PARIZQ          reduce using rule 123 (set_start -> .)

    set_start                      shift and go to state 34

state 31

    (10) FUNCS -> FUNC TYPE ID . ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc
    (84) ADD_FUNC -> .

    PARIZQ          reduce using rule 84 (ADD_FUNC -> .)

    ADD_FUNC                       shift and go to state 35

state 32

    (11) FUNCS -> FUNC VOID CURR_TYPE . ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc

    ID              shift and go to state 36


state 33

    (2) VARS -> VAR TYPE ID ADD_VAR . VARS_PP PTOCOMA
    (3) VARS -> VAR TYPE ID ADD_VAR . CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA
    (6) VARS_PP -> . COMMA ID ADD_VAR VARS_PP
    (7) VARS_PP -> . empty
    (80) empty -> .

    CORIZQ          shift and go to state 38
    COMMA           shift and go to state 39
    PTOCOMA         reduce using rule 80 (empty -> .)

    VARS_PP                        shift and go to state 37
    empty                          shift and go to state 40

state 34

    (22) MAIN_G -> VOID MAIN set_start . change_func PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER endProg
    (108) change_func -> .

    PARIZQ          reduce using rule 108 (change_func -> .)

    change_func                    shift and go to state 41

state 35

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC . PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc

    PARIZQ          shift and go to state 42


state 36

    (11) FUNCS -> FUNC VOID CURR_TYPE ID . ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc
    (84) ADD_FUNC -> .

    PARIZQ          reduce using rule 84 (ADD_FUNC -> .)

    ADD_FUNC                       shift and go to state 43

state 37

    (2) VARS -> VAR TYPE ID ADD_VAR VARS_PP . PTOCOMA

    PTOCOMA         shift and go to state 44


state 38

    (3) VARS -> VAR TYPE ID ADD_VAR CORIZQ . CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA

    CTE_INT         shift and go to state 45


state 39

    (6) VARS_PP -> COMMA . ID ADD_VAR VARS_PP

    ID              shift and go to state 46


state 40

    (7) VARS_PP -> empty .

    PTOCOMA         reduce using rule 7 (VARS_PP -> empty .)


state 41

    (22) MAIN_G -> VOID MAIN set_start change_func . PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER endProg

    PARIZQ          shift and go to state 47


state 42

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ . PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc
    (18) PARAMS -> . TYPE ID ADD_VAR update_param_table PARAMS_P
    (19) PARAMS -> . empty
    (14) TYPE -> . INT CURR_TYPE
    (15) TYPE -> . FLOAT CURR_TYPE
    (16) TYPE -> . BOOL CURR_TYPE
    (17) TYPE -> . CHAR CURR_TYPE
    (80) empty -> .

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    PARDER          reduce using rule 80 (empty -> .)

    TYPE                           shift and go to state 48
    PARAMS                         shift and go to state 49
    empty                          shift and go to state 50

state 43

    (11) FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC . PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc

    PARIZQ          shift and go to state 51


state 44

    (2) VARS -> VAR TYPE ID ADD_VAR VARS_PP PTOCOMA .

    VAR             reduce using rule 2 (VARS -> VAR TYPE ID ADD_VAR VARS_PP PTOCOMA .)
    FUNC            reduce using rule 2 (VARS -> VAR TYPE ID ADD_VAR VARS_PP PTOCOMA .)
    VOID            reduce using rule 2 (VARS -> VAR TYPE ID ADD_VAR VARS_PP PTOCOMA .)


state 45

    (3) VARS -> VAR TYPE ID ADD_VAR CORIZQ CTE_INT . add_dim CORDER MAT_AUX actAddr PTOCOMA
    (117) add_dim -> .

    CORDER          reduce using rule 117 (add_dim -> .)

    add_dim                        shift and go to state 52

state 46

    (6) VARS_PP -> COMMA ID . ADD_VAR VARS_PP
    (83) ADD_VAR -> .

    COMMA           reduce using rule 83 (ADD_VAR -> .)
    PTOCOMA         reduce using rule 83 (ADD_VAR -> .)

    ADD_VAR                        shift and go to state 53

state 47

    (22) MAIN_G -> VOID MAIN set_start change_func PARIZQ . PARDER LLVEIZQ ESTATUTO_P LLVEDER endProg

    PARDER          shift and go to state 54


state 48

    (18) PARAMS -> TYPE . ID ADD_VAR update_param_table PARAMS_P

    ID              shift and go to state 55


state 49

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS . PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc

    PARDER          shift and go to state 56


state 50

    (19) PARAMS -> empty .

    PARDER          reduce using rule 19 (PARAMS -> empty .)


state 51

    (11) FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ . PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc
    (18) PARAMS -> . TYPE ID ADD_VAR update_param_table PARAMS_P
    (19) PARAMS -> . empty
    (14) TYPE -> . INT CURR_TYPE
    (15) TYPE -> . FLOAT CURR_TYPE
    (16) TYPE -> . BOOL CURR_TYPE
    (17) TYPE -> . CHAR CURR_TYPE
    (80) empty -> .

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    PARDER          reduce using rule 80 (empty -> .)

    PARAMS                         shift and go to state 57
    TYPE                           shift and go to state 48
    empty                          shift and go to state 50

state 52

    (3) VARS -> VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim . CORDER MAT_AUX actAddr PTOCOMA

    CORDER          shift and go to state 58


state 53

    (6) VARS_PP -> COMMA ID ADD_VAR . VARS_PP
    (6) VARS_PP -> . COMMA ID ADD_VAR VARS_PP
    (7) VARS_PP -> . empty
    (80) empty -> .

    COMMA           shift and go to state 39
    PTOCOMA         reduce using rule 80 (empty -> .)

    VARS_PP                        shift and go to state 59
    empty                          shift and go to state 40

state 54

    (22) MAIN_G -> VOID MAIN set_start change_func PARIZQ PARDER . LLVEIZQ ESTATUTO_P LLVEDER endProg

    LLVEIZQ         shift and go to state 60


state 55

    (18) PARAMS -> TYPE ID . ADD_VAR update_param_table PARAMS_P
    (83) ADD_VAR -> .

    COMMA           reduce using rule 83 (ADD_VAR -> .)
    PARDER          reduce using rule 83 (ADD_VAR -> .)

    ADD_VAR                        shift and go to state 61

state 56

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER . LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc

    LLVEIZQ         shift and go to state 62


state 57

    (11) FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS . PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc

    PARDER          shift and go to state 63


state 58

    (3) VARS -> VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER . MAT_AUX actAddr PTOCOMA
    (8) MAT_AUX -> . CORIZQ CTE_INT add_dim CORDER
    (9) MAT_AUX -> . empty
    (80) empty -> .

    CORIZQ          shift and go to state 64
    PTOCOMA         reduce using rule 80 (empty -> .)

    MAT_AUX                        shift and go to state 65
    empty                          shift and go to state 66

state 59

    (6) VARS_PP -> COMMA ID ADD_VAR VARS_PP .

    PTOCOMA         reduce using rule 6 (VARS_PP -> COMMA ID ADD_VAR VARS_PP .)


state 60

    (22) MAIN_G -> VOID MAIN set_start change_func PARIZQ PARDER LLVEIZQ . ESTATUTO_P LLVEDER endProg
    (29) ESTATUTO_P -> . ESTATUTO ESTATUTO_P
    (30) ESTATUTO_P -> . empty
    (23) ESTATUTO -> . ASIGNACION
    (24) ESTATUTO -> . CONDICION
    (25) ESTATUTO -> . LOOP_WHILE
    (26) ESTATUTO -> . ESCRITURA
    (27) ESTATUTO -> . LECTURA
    (28) ESTATUTO -> . FUNC_CALL
    (80) empty -> .
    (31) ASIGNACION -> . ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (32) ASIGNACION -> . VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (33) CONDICION -> . IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P
    (36) LOOP_WHILE -> . WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end
    (37) ESCRITURA -> . PRINT PARIZQ PRINTABLE PARDER
    (42) LECTURA -> . READ PARIZQ ID cuad_read PARDER
    (43) FUNC_CALL -> . ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    LLVEDER         reduce using rule 80 (empty -> .)
    ID              shift and go to state 76
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81

    ESTATUTO_P                     shift and go to state 67
    ESTATUTO                       shift and go to state 68
    empty                          shift and go to state 69
    ASIGNACION                     shift and go to state 70
    CONDICION                      shift and go to state 71
    LOOP_WHILE                     shift and go to state 72
    ESCRITURA                      shift and go to state 73
    LECTURA                        shift and go to state 74
    FUNC_CALL                      shift and go to state 75
    VAR_DIM                        shift and go to state 77

state 61

    (18) PARAMS -> TYPE ID ADD_VAR . update_param_table PARAMS_P
    (109) update_param_table -> .

    COMMA           reduce using rule 109 (update_param_table -> .)
    PARDER          reduce using rule 109 (update_param_table -> .)

    update_param_table             shift and go to state 82

state 62

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ . func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc
    (110) func_jump -> .

    ID              reduce using rule 110 (func_jump -> .)
    IF              reduce using rule 110 (func_jump -> .)
    WHILE           reduce using rule 110 (func_jump -> .)
    PRINT           reduce using rule 110 (func_jump -> .)
    READ            reduce using rule 110 (func_jump -> .)
    RETURN          reduce using rule 110 (func_jump -> .)

    func_jump                      shift and go to state 83

state 63

    (11) FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER . LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc

    LLVEIZQ         shift and go to state 84


state 64

    (8) MAT_AUX -> CORIZQ . CTE_INT add_dim CORDER

    CTE_INT         shift and go to state 85


state 65

    (3) VARS -> VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX . actAddr PTOCOMA
    (118) actAddr -> .

    PTOCOMA         reduce using rule 118 (actAddr -> .)

    actAddr                        shift and go to state 86

state 66

    (9) MAT_AUX -> empty .

    PTOCOMA         reduce using rule 9 (MAT_AUX -> empty .)


state 67

    (22) MAIN_G -> VOID MAIN set_start change_func PARIZQ PARDER LLVEIZQ ESTATUTO_P . LLVEDER endProg

    LLVEDER         shift and go to state 87


state 68

    (29) ESTATUTO_P -> ESTATUTO . ESTATUTO_P
    (29) ESTATUTO_P -> . ESTATUTO ESTATUTO_P
    (30) ESTATUTO_P -> . empty
    (23) ESTATUTO -> . ASIGNACION
    (24) ESTATUTO -> . CONDICION
    (25) ESTATUTO -> . LOOP_WHILE
    (26) ESTATUTO -> . ESCRITURA
    (27) ESTATUTO -> . LECTURA
    (28) ESTATUTO -> . FUNC_CALL
    (80) empty -> .
    (31) ASIGNACION -> . ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (32) ASIGNACION -> . VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (33) CONDICION -> . IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P
    (36) LOOP_WHILE -> . WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end
    (37) ESCRITURA -> . PRINT PARIZQ PRINTABLE PARDER
    (42) LECTURA -> . READ PARIZQ ID cuad_read PARDER
    (43) FUNC_CALL -> . ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    LLVEDER         reduce using rule 80 (empty -> .)
    RETURN          reduce using rule 80 (empty -> .)
    ID              shift and go to state 76
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81

    ESTATUTO                       shift and go to state 68
    ESTATUTO_P                     shift and go to state 88
    empty                          shift and go to state 69
    ASIGNACION                     shift and go to state 70
    CONDICION                      shift and go to state 71
    LOOP_WHILE                     shift and go to state 72
    ESCRITURA                      shift and go to state 73
    LECTURA                        shift and go to state 74
    FUNC_CALL                      shift and go to state 75
    VAR_DIM                        shift and go to state 77

state 69

    (30) ESTATUTO_P -> empty .

    LLVEDER         reduce using rule 30 (ESTATUTO_P -> empty .)
    RETURN          reduce using rule 30 (ESTATUTO_P -> empty .)


state 70

    (23) ESTATUTO -> ASIGNACION .

    ID              reduce using rule 23 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 23 (ESTATUTO -> ASIGNACION .)
    WHILE           reduce using rule 23 (ESTATUTO -> ASIGNACION .)
    PRINT           reduce using rule 23 (ESTATUTO -> ASIGNACION .)
    READ            reduce using rule 23 (ESTATUTO -> ASIGNACION .)
    LLVEDER         reduce using rule 23 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 23 (ESTATUTO -> ASIGNACION .)


state 71

    (24) ESTATUTO -> CONDICION .

    ID              reduce using rule 24 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 24 (ESTATUTO -> CONDICION .)
    WHILE           reduce using rule 24 (ESTATUTO -> CONDICION .)
    PRINT           reduce using rule 24 (ESTATUTO -> CONDICION .)
    READ            reduce using rule 24 (ESTATUTO -> CONDICION .)
    LLVEDER         reduce using rule 24 (ESTATUTO -> CONDICION .)
    RETURN          reduce using rule 24 (ESTATUTO -> CONDICION .)


state 72

    (25) ESTATUTO -> LOOP_WHILE .

    ID              reduce using rule 25 (ESTATUTO -> LOOP_WHILE .)
    IF              reduce using rule 25 (ESTATUTO -> LOOP_WHILE .)
    WHILE           reduce using rule 25 (ESTATUTO -> LOOP_WHILE .)
    PRINT           reduce using rule 25 (ESTATUTO -> LOOP_WHILE .)
    READ            reduce using rule 25 (ESTATUTO -> LOOP_WHILE .)
    LLVEDER         reduce using rule 25 (ESTATUTO -> LOOP_WHILE .)
    RETURN          reduce using rule 25 (ESTATUTO -> LOOP_WHILE .)


state 73

    (26) ESTATUTO -> ESCRITURA .

    ID              reduce using rule 26 (ESTATUTO -> ESCRITURA .)
    IF              reduce using rule 26 (ESTATUTO -> ESCRITURA .)
    WHILE           reduce using rule 26 (ESTATUTO -> ESCRITURA .)
    PRINT           reduce using rule 26 (ESTATUTO -> ESCRITURA .)
    READ            reduce using rule 26 (ESTATUTO -> ESCRITURA .)
    LLVEDER         reduce using rule 26 (ESTATUTO -> ESCRITURA .)
    RETURN          reduce using rule 26 (ESTATUTO -> ESCRITURA .)


state 74

    (27) ESTATUTO -> LECTURA .

    ID              reduce using rule 27 (ESTATUTO -> LECTURA .)
    IF              reduce using rule 27 (ESTATUTO -> LECTURA .)
    WHILE           reduce using rule 27 (ESTATUTO -> LECTURA .)
    PRINT           reduce using rule 27 (ESTATUTO -> LECTURA .)
    READ            reduce using rule 27 (ESTATUTO -> LECTURA .)
    LLVEDER         reduce using rule 27 (ESTATUTO -> LECTURA .)
    RETURN          reduce using rule 27 (ESTATUTO -> LECTURA .)


state 75

    (28) ESTATUTO -> FUNC_CALL .

    ID              reduce using rule 28 (ESTATUTO -> FUNC_CALL .)
    IF              reduce using rule 28 (ESTATUTO -> FUNC_CALL .)
    WHILE           reduce using rule 28 (ESTATUTO -> FUNC_CALL .)
    PRINT           reduce using rule 28 (ESTATUTO -> FUNC_CALL .)
    READ            reduce using rule 28 (ESTATUTO -> FUNC_CALL .)
    LLVEDER         reduce using rule 28 (ESTATUTO -> FUNC_CALL .)
    RETURN          reduce using rule 28 (ESTATUTO -> FUNC_CALL .)


state 76

    (31) ASIGNACION -> ID . pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (43) FUNC_CALL -> ID . ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> ID . pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim
    (85) pila_operando_id -> .
    (112) ver_func_id_era -> .

    ASIGN           reduce using rule 85 (pila_operando_id -> .)
    CORIZQ          reduce using rule 85 (pila_operando_id -> .)
    PARIZQ          reduce using rule 112 (ver_func_id_era -> .)

    pila_operando_id               shift and go to state 89
    ver_func_id_era                shift and go to state 90

state 77

    (32) ASIGNACION -> VAR_DIM . ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA

    ASIGN           shift and go to state 91


state 78

    (33) CONDICION -> IF . PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P

    PARIZQ          shift and go to state 92


state 79

    (36) LOOP_WHILE -> WHILE . add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end
    (103) add_jump -> .

    PARIZQ          reduce using rule 103 (add_jump -> .)

    add_jump                       shift and go to state 93

state 80

    (37) ESCRITURA -> PRINT . PARIZQ PRINTABLE PARDER

    PARIZQ          shift and go to state 94


state 81

    (42) LECTURA -> READ . PARIZQ ID cuad_read PARDER

    PARIZQ          shift and go to state 95


state 82

    (18) PARAMS -> TYPE ID ADD_VAR update_param_table . PARAMS_P
    (20) PARAMS_P -> . COMMA TYPE ID ADD_VAR update_param_table PARAMS_P
    (21) PARAMS_P -> . empty
    (80) empty -> .

    COMMA           shift and go to state 97
    PARDER          reduce using rule 80 (empty -> .)

    PARAMS_P                       shift and go to state 96
    empty                          shift and go to state 98

state 83

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump . ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc
    (29) ESTATUTO_P -> . ESTATUTO ESTATUTO_P
    (30) ESTATUTO_P -> . empty
    (23) ESTATUTO -> . ASIGNACION
    (24) ESTATUTO -> . CONDICION
    (25) ESTATUTO -> . LOOP_WHILE
    (26) ESTATUTO -> . ESCRITURA
    (27) ESTATUTO -> . LECTURA
    (28) ESTATUTO -> . FUNC_CALL
    (80) empty -> .
    (31) ASIGNACION -> . ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (32) ASIGNACION -> . VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (33) CONDICION -> . IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P
    (36) LOOP_WHILE -> . WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end
    (37) ESCRITURA -> . PRINT PARIZQ PRINTABLE PARDER
    (42) LECTURA -> . READ PARIZQ ID cuad_read PARDER
    (43) FUNC_CALL -> . ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    RETURN          reduce using rule 80 (empty -> .)
    ID              shift and go to state 76
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81

    ESTATUTO_P                     shift and go to state 99
    ESTATUTO                       shift and go to state 68
    empty                          shift and go to state 69
    ASIGNACION                     shift and go to state 70
    CONDICION                      shift and go to state 71
    LOOP_WHILE                     shift and go to state 72
    ESCRITURA                      shift and go to state 73
    LECTURA                        shift and go to state 74
    FUNC_CALL                      shift and go to state 75
    VAR_DIM                        shift and go to state 77

state 84

    (11) FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ . func_jump ESTATUTO_P LLVEDER endFunc
    (110) func_jump -> .

    ID              reduce using rule 110 (func_jump -> .)
    IF              reduce using rule 110 (func_jump -> .)
    WHILE           reduce using rule 110 (func_jump -> .)
    PRINT           reduce using rule 110 (func_jump -> .)
    READ            reduce using rule 110 (func_jump -> .)
    LLVEDER         reduce using rule 110 (func_jump -> .)

    func_jump                      shift and go to state 100

state 85

    (8) MAT_AUX -> CORIZQ CTE_INT . add_dim CORDER
    (117) add_dim -> .

    CORDER          reduce using rule 117 (add_dim -> .)

    add_dim                        shift and go to state 101

state 86

    (3) VARS -> VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr . PTOCOMA

    PTOCOMA         shift and go to state 102


state 87

    (22) MAIN_G -> VOID MAIN set_start change_func PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER . endProg
    (124) endProg -> .

    $end            reduce using rule 124 (endProg -> .)

    endProg                        shift and go to state 103

state 88

    (29) ESTATUTO_P -> ESTATUTO ESTATUTO_P .

    LLVEDER         reduce using rule 29 (ESTATUTO_P -> ESTATUTO ESTATUTO_P .)
    RETURN          reduce using rule 29 (ESTATUTO_P -> ESTATUTO ESTATUTO_P .)


state 89

    (31) ASIGNACION -> ID pila_operando_id . ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (77) VAR_DIM -> ID pila_operando_id . CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    ASIGN           shift and go to state 104
    CORIZQ          shift and go to state 105


state 90

    (43) FUNC_CALL -> ID ver_func_id_era . PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub

    PARIZQ          shift and go to state 106


state 91

    (32) ASIGNACION -> VAR_DIM ASIGN . pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 107

state 92

    (33) CONDICION -> IF PARIZQ . EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPRESION                      shift and go to state 109
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 93

    (36) LOOP_WHILE -> WHILE add_jump . PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end

    PARIZQ          shift and go to state 122


state 94

    (37) ESCRITURA -> PRINT PARIZQ . PRINTABLE PARDER
    (38) PRINTABLE -> . EXPRESION cuad_print PRINTABLE_P
    (39) PRINTABLE -> . CTE_STR cuad_print_str PRINTABLE_P
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    CTE_STR         shift and go to state 125
    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    PRINTABLE                      shift and go to state 123
    EXPRESION                      shift and go to state 124
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 95

    (42) LECTURA -> READ PARIZQ . ID cuad_read PARDER

    ID              shift and go to state 126


state 96

    (18) PARAMS -> TYPE ID ADD_VAR update_param_table PARAMS_P .

    PARDER          reduce using rule 18 (PARAMS -> TYPE ID ADD_VAR update_param_table PARAMS_P .)


state 97

    (20) PARAMS_P -> COMMA . TYPE ID ADD_VAR update_param_table PARAMS_P
    (14) TYPE -> . INT CURR_TYPE
    (15) TYPE -> . FLOAT CURR_TYPE
    (16) TYPE -> . BOOL CURR_TYPE
    (17) TYPE -> . CHAR CURR_TYPE

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19

    TYPE                           shift and go to state 127

state 98

    (21) PARAMS_P -> empty .

    PARDER          reduce using rule 21 (PARAMS_P -> empty .)


state 99

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P . RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc

    RETURN          shift and go to state 128


state 100

    (11) FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump . ESTATUTO_P LLVEDER endFunc
    (29) ESTATUTO_P -> . ESTATUTO ESTATUTO_P
    (30) ESTATUTO_P -> . empty
    (23) ESTATUTO -> . ASIGNACION
    (24) ESTATUTO -> . CONDICION
    (25) ESTATUTO -> . LOOP_WHILE
    (26) ESTATUTO -> . ESCRITURA
    (27) ESTATUTO -> . LECTURA
    (28) ESTATUTO -> . FUNC_CALL
    (80) empty -> .
    (31) ASIGNACION -> . ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (32) ASIGNACION -> . VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (33) CONDICION -> . IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P
    (36) LOOP_WHILE -> . WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end
    (37) ESCRITURA -> . PRINT PARIZQ PRINTABLE PARDER
    (42) LECTURA -> . READ PARIZQ ID cuad_read PARDER
    (43) FUNC_CALL -> . ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    LLVEDER         reduce using rule 80 (empty -> .)
    ID              shift and go to state 76
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81

    ESTATUTO_P                     shift and go to state 129
    ESTATUTO                       shift and go to state 68
    empty                          shift and go to state 69
    ASIGNACION                     shift and go to state 70
    CONDICION                      shift and go to state 71
    LOOP_WHILE                     shift and go to state 72
    ESCRITURA                      shift and go to state 73
    LECTURA                        shift and go to state 74
    FUNC_CALL                      shift and go to state 75
    VAR_DIM                        shift and go to state 77

state 101

    (8) MAT_AUX -> CORIZQ CTE_INT add_dim . CORDER

    CORDER          shift and go to state 130


state 102

    (3) VARS -> VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA .

    VAR             reduce using rule 3 (VARS -> VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA .)
    FUNC            reduce using rule 3 (VARS -> VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA .)
    VOID            reduce using rule 3 (VARS -> VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA .)


state 103

    (22) MAIN_G -> VOID MAIN set_start change_func PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER endProg .

    $end            reduce using rule 22 (MAIN_G -> VOID MAIN set_start change_func PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER endProg .)


state 104

    (31) ASIGNACION -> ID pila_operando_id ASIGN . pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 131

state 105

    (77) VAR_DIM -> ID pila_operando_id CORIZQ . ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim
    (119) ver_dim -> .

    PARIZQ          reduce using rule 119 (ver_dim -> .)
    ID              reduce using rule 119 (ver_dim -> .)
    CTE_INT         reduce using rule 119 (ver_dim -> .)
    CTE_FLT         reduce using rule 119 (ver_dim -> .)
    CTE_CHAR        reduce using rule 119 (ver_dim -> .)

    ver_dim                        shift and go to state 132

state 106

    (43) FUNC_CALL -> ID ver_func_id_era PARIZQ . fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (90) fondo_falso_add -> .

    PARIZQ          reduce using rule 90 (fondo_falso_add -> .)
    ID              reduce using rule 90 (fondo_falso_add -> .)
    CTE_INT         reduce using rule 90 (fondo_falso_add -> .)
    CTE_FLT         reduce using rule 90 (fondo_falso_add -> .)
    CTE_CHAR        reduce using rule 90 (fondo_falso_add -> .)
    PARDER          reduce using rule 90 (fondo_falso_add -> .)

    fondo_falso_add                shift and go to state 133

state 107

    (32) ASIGNACION -> VAR_DIM ASIGN pila_operadores_add . EXPRESION cuad_asign PTOCOMA
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    VAR_DIM                        shift and go to state 121
    EXPRESION                      shift and go to state 134
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120

state 108

    (69) FACTOR -> PARIZQ . fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (90) fondo_falso_add -> .

    PARIZQ          reduce using rule 90 (fondo_falso_add -> .)
    ID              reduce using rule 90 (fondo_falso_add -> .)
    CTE_INT         reduce using rule 90 (fondo_falso_add -> .)
    CTE_FLT         reduce using rule 90 (fondo_falso_add -> .)
    CTE_CHAR        reduce using rule 90 (fondo_falso_add -> .)

    fondo_falso_add                shift and go to state 135

state 109

    (33) CONDICION -> IF PARIZQ EXPRESION . PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P

    PARDER          shift and go to state 136


state 110

    (49) EXPRESION -> EXPRE . cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> EXPRE . cuad_or
    (93) cuad_or -> .

    OR              reduce using rule 93 (cuad_or -> .)
    PARDER          reduce using rule 93 (cuad_or -> .)
    COMMA           reduce using rule 93 (cuad_or -> .)
    PTOCOMA         reduce using rule 93 (cuad_or -> .)
    CORDER          reduce using rule 93 (cuad_or -> .)

    cuad_or                        shift and go to state 137

state 111

    (51) EXPRE -> EXPR . cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> EXPR . cuad_and
    (92) cuad_and -> .

    AND             reduce using rule 92 (cuad_and -> .)
    OR              reduce using rule 92 (cuad_and -> .)
    PARDER          reduce using rule 92 (cuad_and -> .)
    COMMA           reduce using rule 92 (cuad_and -> .)
    PTOCOMA         reduce using rule 92 (cuad_and -> .)
    CORDER          reduce using rule 92 (cuad_and -> .)

    cuad_and                       shift and go to state 138

state 112

    (53) EXPR -> EXP . cuad_comp EXPR_P
    (94) cuad_comp -> .

    LT              reduce using rule 94 (cuad_comp -> .)
    GT              reduce using rule 94 (cuad_comp -> .)
    DIFF            reduce using rule 94 (cuad_comp -> .)
    LTE             reduce using rule 94 (cuad_comp -> .)
    GTE             reduce using rule 94 (cuad_comp -> .)
    EQUAL           reduce using rule 94 (cuad_comp -> .)
    AND             reduce using rule 94 (cuad_comp -> .)
    OR              reduce using rule 94 (cuad_comp -> .)
    PARDER          reduce using rule 94 (cuad_comp -> .)
    COMMA           reduce using rule 94 (cuad_comp -> .)
    PTOCOMA         reduce using rule 94 (cuad_comp -> .)
    CORDER          reduce using rule 94 (cuad_comp -> .)

    cuad_comp                      shift and go to state 139

state 113

    (61) EXP -> TERM . cuad_sumres EXP_P
    (95) cuad_sumres -> .

    MAS             reduce using rule 95 (cuad_sumres -> .)
    MENOS           reduce using rule 95 (cuad_sumres -> .)
    LT              reduce using rule 95 (cuad_sumres -> .)
    GT              reduce using rule 95 (cuad_sumres -> .)
    DIFF            reduce using rule 95 (cuad_sumres -> .)
    LTE             reduce using rule 95 (cuad_sumres -> .)
    GTE             reduce using rule 95 (cuad_sumres -> .)
    EQUAL           reduce using rule 95 (cuad_sumres -> .)
    AND             reduce using rule 95 (cuad_sumres -> .)
    OR              reduce using rule 95 (cuad_sumres -> .)
    PARDER          reduce using rule 95 (cuad_sumres -> .)
    COMMA           reduce using rule 95 (cuad_sumres -> .)
    PTOCOMA         reduce using rule 95 (cuad_sumres -> .)
    CORDER          reduce using rule 95 (cuad_sumres -> .)

    cuad_sumres                    shift and go to state 140

state 114

    (65) TERM -> FACTOR . cuad_muldiv TERM_P
    (96) cuad_muldiv -> .

    MULT            reduce using rule 96 (cuad_muldiv -> .)
    DIV             reduce using rule 96 (cuad_muldiv -> .)
    MAS             reduce using rule 96 (cuad_muldiv -> .)
    MENOS           reduce using rule 96 (cuad_muldiv -> .)
    LT              reduce using rule 96 (cuad_muldiv -> .)
    GT              reduce using rule 96 (cuad_muldiv -> .)
    DIFF            reduce using rule 96 (cuad_muldiv -> .)
    LTE             reduce using rule 96 (cuad_muldiv -> .)
    GTE             reduce using rule 96 (cuad_muldiv -> .)
    EQUAL           reduce using rule 96 (cuad_muldiv -> .)
    AND             reduce using rule 96 (cuad_muldiv -> .)
    OR              reduce using rule 96 (cuad_muldiv -> .)
    PARDER          reduce using rule 96 (cuad_muldiv -> .)
    COMMA           reduce using rule 96 (cuad_muldiv -> .)
    PTOCOMA         reduce using rule 96 (cuad_muldiv -> .)
    CORDER          reduce using rule 96 (cuad_muldiv -> .)

    cuad_muldiv                    shift and go to state 141

state 115

    (70) FACTOR -> VAR_CTE .

    MULT            reduce using rule 70 (FACTOR -> VAR_CTE .)
    DIV             reduce using rule 70 (FACTOR -> VAR_CTE .)
    MAS             reduce using rule 70 (FACTOR -> VAR_CTE .)
    MENOS           reduce using rule 70 (FACTOR -> VAR_CTE .)
    LT              reduce using rule 70 (FACTOR -> VAR_CTE .)
    GT              reduce using rule 70 (FACTOR -> VAR_CTE .)
    DIFF            reduce using rule 70 (FACTOR -> VAR_CTE .)
    LTE             reduce using rule 70 (FACTOR -> VAR_CTE .)
    GTE             reduce using rule 70 (FACTOR -> VAR_CTE .)
    EQUAL           reduce using rule 70 (FACTOR -> VAR_CTE .)
    AND             reduce using rule 70 (FACTOR -> VAR_CTE .)
    OR              reduce using rule 70 (FACTOR -> VAR_CTE .)
    PARDER          reduce using rule 70 (FACTOR -> VAR_CTE .)
    COMMA           reduce using rule 70 (FACTOR -> VAR_CTE .)
    PTOCOMA         reduce using rule 70 (FACTOR -> VAR_CTE .)
    CORDER          reduce using rule 70 (FACTOR -> VAR_CTE .)


state 116

    (71) VAR_CTE -> ID . pila_operando_id
    (44) FUNC_CALL_EXP -> ID . ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> ID . pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim
    (85) pila_operando_id -> .
    (113) ver_func_id_era_exp -> .

    CORIZQ          reduce using rule 85 (pila_operando_id -> .)
    MULT            reduce using rule 85 (pila_operando_id -> .)
    DIV             reduce using rule 85 (pila_operando_id -> .)
    MAS             reduce using rule 85 (pila_operando_id -> .)
    MENOS           reduce using rule 85 (pila_operando_id -> .)
    LT              reduce using rule 85 (pila_operando_id -> .)
    GT              reduce using rule 85 (pila_operando_id -> .)
    DIFF            reduce using rule 85 (pila_operando_id -> .)
    LTE             reduce using rule 85 (pila_operando_id -> .)
    GTE             reduce using rule 85 (pila_operando_id -> .)
    EQUAL           reduce using rule 85 (pila_operando_id -> .)
    AND             reduce using rule 85 (pila_operando_id -> .)
    OR              reduce using rule 85 (pila_operando_id -> .)
    PARDER          reduce using rule 85 (pila_operando_id -> .)
    COMMA           reduce using rule 85 (pila_operando_id -> .)
    PTOCOMA         reduce using rule 85 (pila_operando_id -> .)
    CORDER          reduce using rule 85 (pila_operando_id -> .)
    PARIZQ          reduce using rule 113 (ver_func_id_era_exp -> .)

    pila_operando_id               shift and go to state 142
    ver_func_id_era_exp            shift and go to state 143

state 117

    (72) VAR_CTE -> CTE_INT . pila_operando_int
    (86) pila_operando_int -> .

    MULT            reduce using rule 86 (pila_operando_int -> .)
    DIV             reduce using rule 86 (pila_operando_int -> .)
    MAS             reduce using rule 86 (pila_operando_int -> .)
    MENOS           reduce using rule 86 (pila_operando_int -> .)
    LT              reduce using rule 86 (pila_operando_int -> .)
    GT              reduce using rule 86 (pila_operando_int -> .)
    DIFF            reduce using rule 86 (pila_operando_int -> .)
    LTE             reduce using rule 86 (pila_operando_int -> .)
    GTE             reduce using rule 86 (pila_operando_int -> .)
    EQUAL           reduce using rule 86 (pila_operando_int -> .)
    AND             reduce using rule 86 (pila_operando_int -> .)
    OR              reduce using rule 86 (pila_operando_int -> .)
    PARDER          reduce using rule 86 (pila_operando_int -> .)
    COMMA           reduce using rule 86 (pila_operando_int -> .)
    PTOCOMA         reduce using rule 86 (pila_operando_int -> .)
    CORDER          reduce using rule 86 (pila_operando_int -> .)

    pila_operando_int              shift and go to state 144

state 118

    (73) VAR_CTE -> CTE_FLT . pila_operando_float
    (87) pila_operando_float -> .

    MULT            reduce using rule 87 (pila_operando_float -> .)
    DIV             reduce using rule 87 (pila_operando_float -> .)
    MAS             reduce using rule 87 (pila_operando_float -> .)
    MENOS           reduce using rule 87 (pila_operando_float -> .)
    LT              reduce using rule 87 (pila_operando_float -> .)
    GT              reduce using rule 87 (pila_operando_float -> .)
    DIFF            reduce using rule 87 (pila_operando_float -> .)
    LTE             reduce using rule 87 (pila_operando_float -> .)
    GTE             reduce using rule 87 (pila_operando_float -> .)
    EQUAL           reduce using rule 87 (pila_operando_float -> .)
    AND             reduce using rule 87 (pila_operando_float -> .)
    OR              reduce using rule 87 (pila_operando_float -> .)
    PARDER          reduce using rule 87 (pila_operando_float -> .)
    COMMA           reduce using rule 87 (pila_operando_float -> .)
    PTOCOMA         reduce using rule 87 (pila_operando_float -> .)
    CORDER          reduce using rule 87 (pila_operando_float -> .)

    pila_operando_float            shift and go to state 145

state 119

    (74) VAR_CTE -> CTE_CHAR . pila_operando_char
    (88) pila_operando_char -> .

    MULT            reduce using rule 88 (pila_operando_char -> .)
    DIV             reduce using rule 88 (pila_operando_char -> .)
    MAS             reduce using rule 88 (pila_operando_char -> .)
    MENOS           reduce using rule 88 (pila_operando_char -> .)
    LT              reduce using rule 88 (pila_operando_char -> .)
    GT              reduce using rule 88 (pila_operando_char -> .)
    DIFF            reduce using rule 88 (pila_operando_char -> .)
    LTE             reduce using rule 88 (pila_operando_char -> .)
    GTE             reduce using rule 88 (pila_operando_char -> .)
    EQUAL           reduce using rule 88 (pila_operando_char -> .)
    AND             reduce using rule 88 (pila_operando_char -> .)
    OR              reduce using rule 88 (pila_operando_char -> .)
    PARDER          reduce using rule 88 (pila_operando_char -> .)
    COMMA           reduce using rule 88 (pila_operando_char -> .)
    PTOCOMA         reduce using rule 88 (pila_operando_char -> .)
    CORDER          reduce using rule 88 (pila_operando_char -> .)

    pila_operando_char             shift and go to state 146

state 120

    (75) VAR_CTE -> FUNC_CALL_EXP .

    MULT            reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    DIV             reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    MAS             reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    MENOS           reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    LT              reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    GT              reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    DIFF            reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    LTE             reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    GTE             reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    EQUAL           reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    AND             reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    OR              reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    PARDER          reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    COMMA           reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    PTOCOMA         reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)
    CORDER          reduce using rule 75 (VAR_CTE -> FUNC_CALL_EXP .)


state 121

    (76) VAR_CTE -> VAR_DIM .

    MULT            reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    DIV             reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    MAS             reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    MENOS           reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    LT              reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    GT              reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    DIFF            reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    LTE             reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    GTE             reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    EQUAL           reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    AND             reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    OR              reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    PARDER          reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    COMMA           reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    PTOCOMA         reduce using rule 76 (VAR_CTE -> VAR_DIM .)
    CORDER          reduce using rule 76 (VAR_CTE -> VAR_DIM .)


state 122

    (36) LOOP_WHILE -> WHILE add_jump PARIZQ . EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPRESION                      shift and go to state 147
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 123

    (37) ESCRITURA -> PRINT PARIZQ PRINTABLE . PARDER

    PARDER          shift and go to state 148


state 124

    (38) PRINTABLE -> EXPRESION . cuad_print PRINTABLE_P
    (106) cuad_print -> .

    COMMA           reduce using rule 106 (cuad_print -> .)
    PARDER          reduce using rule 106 (cuad_print -> .)

    cuad_print                     shift and go to state 149

state 125

    (39) PRINTABLE -> CTE_STR . cuad_print_str PRINTABLE_P
    (107) cuad_print_str -> .

    COMMA           reduce using rule 107 (cuad_print_str -> .)
    PARDER          reduce using rule 107 (cuad_print_str -> .)

    cuad_print_str                 shift and go to state 150

state 126

    (42) LECTURA -> READ PARIZQ ID . cuad_read PARDER
    (98) cuad_read -> .

    PARDER          reduce using rule 98 (cuad_read -> .)

    cuad_read                      shift and go to state 151

state 127

    (20) PARAMS_P -> COMMA TYPE . ID ADD_VAR update_param_table PARAMS_P

    ID              shift and go to state 152


state 128

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN . EXPRESION cuad_return PTOCOMA LLVEDER endFunc
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPRESION                      shift and go to state 153
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 129

    (11) FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P . LLVEDER endFunc

    LLVEDER         shift and go to state 154


state 130

    (8) MAT_AUX -> CORIZQ CTE_INT add_dim CORDER .

    PTOCOMA         reduce using rule 8 (MAT_AUX -> CORIZQ CTE_INT add_dim CORDER .)


state 131

    (31) ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add . EXPRESION cuad_asign PTOCOMA
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPRESION                      shift and go to state 155
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 132

    (77) VAR_DIM -> ID pila_operando_id CORIZQ ver_dim . fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim
    (90) fondo_falso_add -> .

    PARIZQ          reduce using rule 90 (fondo_falso_add -> .)
    ID              reduce using rule 90 (fondo_falso_add -> .)
    CTE_INT         reduce using rule 90 (fondo_falso_add -> .)
    CTE_FLT         reduce using rule 90 (fondo_falso_add -> .)
    CTE_CHAR        reduce using rule 90 (fondo_falso_add -> .)

    fondo_falso_add                shift and go to state 156

state 133

    (43) FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add . PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (45) PARM -> . EXPRESION ver_param PARM_P
    (46) PARM -> . empty
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (80) empty -> .
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARDER          reduce using rule 80 (empty -> .)
    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    PARM                           shift and go to state 157
    EXPRESION                      shift and go to state 158
    empty                          shift and go to state 159
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 134

    (32) ASIGNACION -> VAR_DIM ASIGN pila_operadores_add EXPRESION . cuad_asign PTOCOMA
    (97) cuad_asign -> .

    PTOCOMA         reduce using rule 97 (cuad_asign -> .)

    cuad_asign                     shift and go to state 160

state 135

    (69) FACTOR -> PARIZQ fondo_falso_add . EXPRESION PARDER fondo_falso_pop
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPRESION                      shift and go to state 161
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 136

    (33) CONDICION -> IF PARIZQ EXPRESION PARDER . ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P
    (100) ver_if -> .

    LLVEIZQ         reduce using rule 100 (ver_if -> .)

    ver_if                         shift and go to state 162

state 137

    (49) EXPRESION -> EXPRE cuad_or . OR pila_operadores_add EXPRESION
    (50) EXPRESION -> EXPRE cuad_or .

    OR              shift and go to state 163
    PARDER          reduce using rule 50 (EXPRESION -> EXPRE cuad_or .)
    COMMA           reduce using rule 50 (EXPRESION -> EXPRE cuad_or .)
    PTOCOMA         reduce using rule 50 (EXPRESION -> EXPRE cuad_or .)
    CORDER          reduce using rule 50 (EXPRESION -> EXPRE cuad_or .)


state 138

    (51) EXPRE -> EXPR cuad_and . AND pila_operadores_add EXPRE
    (52) EXPRE -> EXPR cuad_and .

    AND             shift and go to state 164
    OR              reduce using rule 52 (EXPRE -> EXPR cuad_and .)
    PARDER          reduce using rule 52 (EXPRE -> EXPR cuad_and .)
    COMMA           reduce using rule 52 (EXPRE -> EXPR cuad_and .)
    PTOCOMA         reduce using rule 52 (EXPRE -> EXPR cuad_and .)
    CORDER          reduce using rule 52 (EXPRE -> EXPR cuad_and .)


state 139

    (53) EXPR -> EXP cuad_comp . EXPR_P
    (54) EXPR_P -> . LT pila_operadores_add EXPR
    (55) EXPR_P -> . GT pila_operadores_add EXPR
    (56) EXPR_P -> . DIFF pila_operadores_add EXPR
    (57) EXPR_P -> . LTE pila_operadores_add EXPR
    (58) EXPR_P -> . GTE pila_operadores_add EXPR
    (59) EXPR_P -> . EQUAL pila_operadores_add EXPR
    (60) EXPR_P -> . empty
    (80) empty -> .

    LT              shift and go to state 166
    GT              shift and go to state 167
    DIFF            shift and go to state 168
    LTE             shift and go to state 169
    GTE             shift and go to state 170
    EQUAL           shift and go to state 171
    AND             reduce using rule 80 (empty -> .)
    OR              reduce using rule 80 (empty -> .)
    PARDER          reduce using rule 80 (empty -> .)
    COMMA           reduce using rule 80 (empty -> .)
    PTOCOMA         reduce using rule 80 (empty -> .)
    CORDER          reduce using rule 80 (empty -> .)

    EXPR_P                         shift and go to state 165
    empty                          shift and go to state 172

state 140

    (61) EXP -> TERM cuad_sumres . EXP_P
    (62) EXP_P -> . MAS pila_operadores_add EXP
    (63) EXP_P -> . MENOS pila_operadores_add EXP
    (64) EXP_P -> . empty
    (80) empty -> .

    MAS             shift and go to state 174
    MENOS           shift and go to state 175
    LT              reduce using rule 80 (empty -> .)
    GT              reduce using rule 80 (empty -> .)
    DIFF            reduce using rule 80 (empty -> .)
    LTE             reduce using rule 80 (empty -> .)
    GTE             reduce using rule 80 (empty -> .)
    EQUAL           reduce using rule 80 (empty -> .)
    AND             reduce using rule 80 (empty -> .)
    OR              reduce using rule 80 (empty -> .)
    PARDER          reduce using rule 80 (empty -> .)
    COMMA           reduce using rule 80 (empty -> .)
    PTOCOMA         reduce using rule 80 (empty -> .)
    CORDER          reduce using rule 80 (empty -> .)

    EXP_P                          shift and go to state 173
    empty                          shift and go to state 176

state 141

    (65) TERM -> FACTOR cuad_muldiv . TERM_P
    (66) TERM_P -> . MULT pila_operadores_add TERM
    (67) TERM_P -> . DIV pila_operadores_add TERM
    (68) TERM_P -> . empty
    (80) empty -> .

    MULT            shift and go to state 178
    DIV             shift and go to state 179
    MAS             reduce using rule 80 (empty -> .)
    MENOS           reduce using rule 80 (empty -> .)
    LT              reduce using rule 80 (empty -> .)
    GT              reduce using rule 80 (empty -> .)
    DIFF            reduce using rule 80 (empty -> .)
    LTE             reduce using rule 80 (empty -> .)
    GTE             reduce using rule 80 (empty -> .)
    EQUAL           reduce using rule 80 (empty -> .)
    AND             reduce using rule 80 (empty -> .)
    OR              reduce using rule 80 (empty -> .)
    PARDER          reduce using rule 80 (empty -> .)
    COMMA           reduce using rule 80 (empty -> .)
    PTOCOMA         reduce using rule 80 (empty -> .)
    CORDER          reduce using rule 80 (empty -> .)

    TERM_P                         shift and go to state 177
    empty                          shift and go to state 180

state 142

    (71) VAR_CTE -> ID pila_operando_id .
    (77) VAR_DIM -> ID pila_operando_id . CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    MULT            reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    DIV             reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    MAS             reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    MENOS           reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    LT              reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    GT              reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    DIFF            reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    LTE             reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    GTE             reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    EQUAL           reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    AND             reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    OR              reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    PARDER          reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    COMMA           reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    PTOCOMA         reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    CORDER          reduce using rule 71 (VAR_CTE -> ID pila_operando_id .)
    CORIZQ          shift and go to state 105


state 143

    (44) FUNC_CALL_EXP -> ID ver_func_id_era_exp . PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub

    PARIZQ          shift and go to state 181


state 144

    (72) VAR_CTE -> CTE_INT pila_operando_int .

    MULT            reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    DIV             reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    MAS             reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    MENOS           reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    LT              reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    GT              reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    DIFF            reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    LTE             reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    GTE             reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    EQUAL           reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    AND             reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    OR              reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    PARDER          reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    COMMA           reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    PTOCOMA         reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)
    CORDER          reduce using rule 72 (VAR_CTE -> CTE_INT pila_operando_int .)


state 145

    (73) VAR_CTE -> CTE_FLT pila_operando_float .

    MULT            reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    DIV             reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    MAS             reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    MENOS           reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    LT              reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    GT              reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    DIFF            reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    LTE             reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    GTE             reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    EQUAL           reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    AND             reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    OR              reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    PARDER          reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    COMMA           reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    PTOCOMA         reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)
    CORDER          reduce using rule 73 (VAR_CTE -> CTE_FLT pila_operando_float .)


state 146

    (74) VAR_CTE -> CTE_CHAR pila_operando_char .

    MULT            reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    DIV             reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    MAS             reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    MENOS           reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    LT              reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    GT              reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    DIFF            reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    LTE             reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    GTE             reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    EQUAL           reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    AND             reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    OR              reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    PARDER          reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    COMMA           reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    PTOCOMA         reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)
    CORDER          reduce using rule 74 (VAR_CTE -> CTE_CHAR pila_operando_char .)


state 147

    (36) LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION . PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end

    PARDER          shift and go to state 182


state 148

    (37) ESCRITURA -> PRINT PARIZQ PRINTABLE PARDER .

    ID              reduce using rule 37 (ESCRITURA -> PRINT PARIZQ PRINTABLE PARDER .)
    IF              reduce using rule 37 (ESCRITURA -> PRINT PARIZQ PRINTABLE PARDER .)
    WHILE           reduce using rule 37 (ESCRITURA -> PRINT PARIZQ PRINTABLE PARDER .)
    PRINT           reduce using rule 37 (ESCRITURA -> PRINT PARIZQ PRINTABLE PARDER .)
    READ            reduce using rule 37 (ESCRITURA -> PRINT PARIZQ PRINTABLE PARDER .)
    LLVEDER         reduce using rule 37 (ESCRITURA -> PRINT PARIZQ PRINTABLE PARDER .)
    RETURN          reduce using rule 37 (ESCRITURA -> PRINT PARIZQ PRINTABLE PARDER .)


state 149

    (38) PRINTABLE -> EXPRESION cuad_print . PRINTABLE_P
    (40) PRINTABLE_P -> . COMMA PRINTABLE
    (41) PRINTABLE_P -> . empty
    (80) empty -> .

    COMMA           shift and go to state 184
    PARDER          reduce using rule 80 (empty -> .)

    PRINTABLE_P                    shift and go to state 183
    empty                          shift and go to state 185

state 150

    (39) PRINTABLE -> CTE_STR cuad_print_str . PRINTABLE_P
    (40) PRINTABLE_P -> . COMMA PRINTABLE
    (41) PRINTABLE_P -> . empty
    (80) empty -> .

    COMMA           shift and go to state 184
    PARDER          reduce using rule 80 (empty -> .)

    PRINTABLE_P                    shift and go to state 186
    empty                          shift and go to state 185

state 151

    (42) LECTURA -> READ PARIZQ ID cuad_read . PARDER

    PARDER          shift and go to state 187


state 152

    (20) PARAMS_P -> COMMA TYPE ID . ADD_VAR update_param_table PARAMS_P
    (83) ADD_VAR -> .

    COMMA           reduce using rule 83 (ADD_VAR -> .)
    PARDER          reduce using rule 83 (ADD_VAR -> .)

    ADD_VAR                        shift and go to state 188

state 153

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION . cuad_return PTOCOMA LLVEDER endFunc
    (99) cuad_return -> .

    PTOCOMA         reduce using rule 99 (cuad_return -> .)

    cuad_return                    shift and go to state 189

state 154

    (11) FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER . endFunc
    (111) endFunc -> .

    FUNC            reduce using rule 111 (endFunc -> .)
    VOID            reduce using rule 111 (endFunc -> .)

    endFunc                        shift and go to state 190

state 155

    (31) ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add EXPRESION . cuad_asign PTOCOMA
    (97) cuad_asign -> .

    PTOCOMA         reduce using rule 97 (cuad_asign -> .)

    cuad_asign                     shift and go to state 191

state 156

    (77) VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add . EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPRESION                      shift and go to state 192
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 157

    (43) FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM . ver_param_num PARDER fondo_falso_pop cuad_gosub
    (115) ver_param_num -> .

    PARDER          reduce using rule 115 (ver_param_num -> .)

    ver_param_num                  shift and go to state 193

state 158

    (45) PARM -> EXPRESION . ver_param PARM_P
    (114) ver_param -> .

    COMMA           reduce using rule 114 (ver_param -> .)
    PARDER          reduce using rule 114 (ver_param -> .)

    ver_param                      shift and go to state 194

state 159

    (46) PARM -> empty .

    PARDER          reduce using rule 46 (PARM -> empty .)


state 160

    (32) ASIGNACION -> VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign . PTOCOMA

    PTOCOMA         shift and go to state 195


state 161

    (69) FACTOR -> PARIZQ fondo_falso_add EXPRESION . PARDER fondo_falso_pop

    PARDER          shift and go to state 196


state 162

    (33) CONDICION -> IF PARIZQ EXPRESION PARDER ver_if . LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P

    LLVEIZQ         shift and go to state 197


state 163

    (49) EXPRESION -> EXPRE cuad_or OR . pila_operadores_add EXPRESION
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 198

state 164

    (51) EXPRE -> EXPR cuad_and AND . pila_operadores_add EXPRE
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 199

state 165

    (53) EXPR -> EXP cuad_comp EXPR_P .

    AND             reduce using rule 53 (EXPR -> EXP cuad_comp EXPR_P .)
    OR              reduce using rule 53 (EXPR -> EXP cuad_comp EXPR_P .)
    PARDER          reduce using rule 53 (EXPR -> EXP cuad_comp EXPR_P .)
    COMMA           reduce using rule 53 (EXPR -> EXP cuad_comp EXPR_P .)
    PTOCOMA         reduce using rule 53 (EXPR -> EXP cuad_comp EXPR_P .)
    CORDER          reduce using rule 53 (EXPR -> EXP cuad_comp EXPR_P .)


state 166

    (54) EXPR_P -> LT . pila_operadores_add EXPR
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 200

state 167

    (55) EXPR_P -> GT . pila_operadores_add EXPR
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 201

state 168

    (56) EXPR_P -> DIFF . pila_operadores_add EXPR
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 202

state 169

    (57) EXPR_P -> LTE . pila_operadores_add EXPR
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 203

state 170

    (58) EXPR_P -> GTE . pila_operadores_add EXPR
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 204

state 171

    (59) EXPR_P -> EQUAL . pila_operadores_add EXPR
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 205

state 172

    (60) EXPR_P -> empty .

    AND             reduce using rule 60 (EXPR_P -> empty .)
    OR              reduce using rule 60 (EXPR_P -> empty .)
    PARDER          reduce using rule 60 (EXPR_P -> empty .)
    COMMA           reduce using rule 60 (EXPR_P -> empty .)
    PTOCOMA         reduce using rule 60 (EXPR_P -> empty .)
    CORDER          reduce using rule 60 (EXPR_P -> empty .)


state 173

    (61) EXP -> TERM cuad_sumres EXP_P .

    LT              reduce using rule 61 (EXP -> TERM cuad_sumres EXP_P .)
    GT              reduce using rule 61 (EXP -> TERM cuad_sumres EXP_P .)
    DIFF            reduce using rule 61 (EXP -> TERM cuad_sumres EXP_P .)
    LTE             reduce using rule 61 (EXP -> TERM cuad_sumres EXP_P .)
    GTE             reduce using rule 61 (EXP -> TERM cuad_sumres EXP_P .)
    EQUAL           reduce using rule 61 (EXP -> TERM cuad_sumres EXP_P .)
    AND             reduce using rule 61 (EXP -> TERM cuad_sumres EXP_P .)
    OR              reduce using rule 61 (EXP -> TERM cuad_sumres EXP_P .)
    PARDER          reduce using rule 61 (EXP -> TERM cuad_sumres EXP_P .)
    COMMA           reduce using rule 61 (EXP -> TERM cuad_sumres EXP_P .)
    PTOCOMA         reduce using rule 61 (EXP -> TERM cuad_sumres EXP_P .)
    CORDER          reduce using rule 61 (EXP -> TERM cuad_sumres EXP_P .)


state 174

    (62) EXP_P -> MAS . pila_operadores_add EXP
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 206

state 175

    (63) EXP_P -> MENOS . pila_operadores_add EXP
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 207

state 176

    (64) EXP_P -> empty .

    LT              reduce using rule 64 (EXP_P -> empty .)
    GT              reduce using rule 64 (EXP_P -> empty .)
    DIFF            reduce using rule 64 (EXP_P -> empty .)
    LTE             reduce using rule 64 (EXP_P -> empty .)
    GTE             reduce using rule 64 (EXP_P -> empty .)
    EQUAL           reduce using rule 64 (EXP_P -> empty .)
    AND             reduce using rule 64 (EXP_P -> empty .)
    OR              reduce using rule 64 (EXP_P -> empty .)
    PARDER          reduce using rule 64 (EXP_P -> empty .)
    COMMA           reduce using rule 64 (EXP_P -> empty .)
    PTOCOMA         reduce using rule 64 (EXP_P -> empty .)
    CORDER          reduce using rule 64 (EXP_P -> empty .)


state 177

    (65) TERM -> FACTOR cuad_muldiv TERM_P .

    MAS             reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    MENOS           reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    LT              reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    GT              reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    DIFF            reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    LTE             reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    GTE             reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    EQUAL           reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    AND             reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    OR              reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    PARDER          reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    COMMA           reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    PTOCOMA         reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)
    CORDER          reduce using rule 65 (TERM -> FACTOR cuad_muldiv TERM_P .)


state 178

    (66) TERM_P -> MULT . pila_operadores_add TERM
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 208

state 179

    (67) TERM_P -> DIV . pila_operadores_add TERM
    (89) pila_operadores_add -> .

    PARIZQ          reduce using rule 89 (pila_operadores_add -> .)
    ID              reduce using rule 89 (pila_operadores_add -> .)
    CTE_INT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_FLT         reduce using rule 89 (pila_operadores_add -> .)
    CTE_CHAR        reduce using rule 89 (pila_operadores_add -> .)

    pila_operadores_add            shift and go to state 209

state 180

    (68) TERM_P -> empty .

    MAS             reduce using rule 68 (TERM_P -> empty .)
    MENOS           reduce using rule 68 (TERM_P -> empty .)
    LT              reduce using rule 68 (TERM_P -> empty .)
    GT              reduce using rule 68 (TERM_P -> empty .)
    DIFF            reduce using rule 68 (TERM_P -> empty .)
    LTE             reduce using rule 68 (TERM_P -> empty .)
    GTE             reduce using rule 68 (TERM_P -> empty .)
    EQUAL           reduce using rule 68 (TERM_P -> empty .)
    AND             reduce using rule 68 (TERM_P -> empty .)
    OR              reduce using rule 68 (TERM_P -> empty .)
    PARDER          reduce using rule 68 (TERM_P -> empty .)
    COMMA           reduce using rule 68 (TERM_P -> empty .)
    PTOCOMA         reduce using rule 68 (TERM_P -> empty .)
    CORDER          reduce using rule 68 (TERM_P -> empty .)


state 181

    (44) FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ . fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (90) fondo_falso_add -> .

    PARIZQ          reduce using rule 90 (fondo_falso_add -> .)
    ID              reduce using rule 90 (fondo_falso_add -> .)
    CTE_INT         reduce using rule 90 (fondo_falso_add -> .)
    CTE_FLT         reduce using rule 90 (fondo_falso_add -> .)
    CTE_CHAR        reduce using rule 90 (fondo_falso_add -> .)
    PARDER          reduce using rule 90 (fondo_falso_add -> .)

    fondo_falso_add                shift and go to state 210

state 182

    (36) LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER . ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end
    (104) ver_while -> .

    LLVEIZQ         reduce using rule 104 (ver_while -> .)

    ver_while                      shift and go to state 211

state 183

    (38) PRINTABLE -> EXPRESION cuad_print PRINTABLE_P .

    PARDER          reduce using rule 38 (PRINTABLE -> EXPRESION cuad_print PRINTABLE_P .)


state 184

    (40) PRINTABLE_P -> COMMA . PRINTABLE
    (38) PRINTABLE -> . EXPRESION cuad_print PRINTABLE_P
    (39) PRINTABLE -> . CTE_STR cuad_print_str PRINTABLE_P
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    CTE_STR         shift and go to state 125
    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    PRINTABLE                      shift and go to state 212
    EXPRESION                      shift and go to state 124
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 185

    (41) PRINTABLE_P -> empty .

    PARDER          reduce using rule 41 (PRINTABLE_P -> empty .)


state 186

    (39) PRINTABLE -> CTE_STR cuad_print_str PRINTABLE_P .

    PARDER          reduce using rule 39 (PRINTABLE -> CTE_STR cuad_print_str PRINTABLE_P .)


state 187

    (42) LECTURA -> READ PARIZQ ID cuad_read PARDER .

    ID              reduce using rule 42 (LECTURA -> READ PARIZQ ID cuad_read PARDER .)
    IF              reduce using rule 42 (LECTURA -> READ PARIZQ ID cuad_read PARDER .)
    WHILE           reduce using rule 42 (LECTURA -> READ PARIZQ ID cuad_read PARDER .)
    PRINT           reduce using rule 42 (LECTURA -> READ PARIZQ ID cuad_read PARDER .)
    READ            reduce using rule 42 (LECTURA -> READ PARIZQ ID cuad_read PARDER .)
    LLVEDER         reduce using rule 42 (LECTURA -> READ PARIZQ ID cuad_read PARDER .)
    RETURN          reduce using rule 42 (LECTURA -> READ PARIZQ ID cuad_read PARDER .)


state 188

    (20) PARAMS_P -> COMMA TYPE ID ADD_VAR . update_param_table PARAMS_P
    (109) update_param_table -> .

    COMMA           reduce using rule 109 (update_param_table -> .)
    PARDER          reduce using rule 109 (update_param_table -> .)

    update_param_table             shift and go to state 213

state 189

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return . PTOCOMA LLVEDER endFunc

    PTOCOMA         shift and go to state 214


state 190

    (11) FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc .

    FUNC            reduce using rule 11 (FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc .)
    VOID            reduce using rule 11 (FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc .)


state 191

    (31) ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign . PTOCOMA

    PTOCOMA         shift and go to state 215


state 192

    (77) VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION . cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim
    (121) cuad_ver -> .

    CORDER          reduce using rule 121 (cuad_ver -> .)

    cuad_ver                       shift and go to state 216

state 193

    (43) FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num . PARDER fondo_falso_pop cuad_gosub

    PARDER          shift and go to state 217


state 194

    (45) PARM -> EXPRESION ver_param . PARM_P
    (47) PARM_P -> . COMMA EXPRESION ver_param PARM_P
    (48) PARM_P -> . empty
    (80) empty -> .

    COMMA           shift and go to state 219
    PARDER          reduce using rule 80 (empty -> .)

    PARM_P                         shift and go to state 218
    empty                          shift and go to state 220

state 195

    (32) ASIGNACION -> VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .

    ID              reduce using rule 32 (ASIGNACION -> VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)
    IF              reduce using rule 32 (ASIGNACION -> VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)
    WHILE           reduce using rule 32 (ASIGNACION -> VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)
    PRINT           reduce using rule 32 (ASIGNACION -> VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)
    READ            reduce using rule 32 (ASIGNACION -> VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)
    LLVEDER         reduce using rule 32 (ASIGNACION -> VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)
    RETURN          reduce using rule 32 (ASIGNACION -> VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)


state 196

    (69) FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER . fondo_falso_pop
    (91) fondo_falso_pop -> .

    MULT            reduce using rule 91 (fondo_falso_pop -> .)
    DIV             reduce using rule 91 (fondo_falso_pop -> .)
    MAS             reduce using rule 91 (fondo_falso_pop -> .)
    MENOS           reduce using rule 91 (fondo_falso_pop -> .)
    LT              reduce using rule 91 (fondo_falso_pop -> .)
    GT              reduce using rule 91 (fondo_falso_pop -> .)
    DIFF            reduce using rule 91 (fondo_falso_pop -> .)
    LTE             reduce using rule 91 (fondo_falso_pop -> .)
    GTE             reduce using rule 91 (fondo_falso_pop -> .)
    EQUAL           reduce using rule 91 (fondo_falso_pop -> .)
    AND             reduce using rule 91 (fondo_falso_pop -> .)
    OR              reduce using rule 91 (fondo_falso_pop -> .)
    PARDER          reduce using rule 91 (fondo_falso_pop -> .)
    COMMA           reduce using rule 91 (fondo_falso_pop -> .)
    PTOCOMA         reduce using rule 91 (fondo_falso_pop -> .)
    CORDER          reduce using rule 91 (fondo_falso_pop -> .)

    fondo_falso_pop                shift and go to state 221

state 197

    (33) CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ . ESTATUTO_P LLVEDER CONDICION_P
    (29) ESTATUTO_P -> . ESTATUTO ESTATUTO_P
    (30) ESTATUTO_P -> . empty
    (23) ESTATUTO -> . ASIGNACION
    (24) ESTATUTO -> . CONDICION
    (25) ESTATUTO -> . LOOP_WHILE
    (26) ESTATUTO -> . ESCRITURA
    (27) ESTATUTO -> . LECTURA
    (28) ESTATUTO -> . FUNC_CALL
    (80) empty -> .
    (31) ASIGNACION -> . ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (32) ASIGNACION -> . VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (33) CONDICION -> . IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P
    (36) LOOP_WHILE -> . WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end
    (37) ESCRITURA -> . PRINT PARIZQ PRINTABLE PARDER
    (42) LECTURA -> . READ PARIZQ ID cuad_read PARDER
    (43) FUNC_CALL -> . ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    LLVEDER         reduce using rule 80 (empty -> .)
    ID              shift and go to state 76
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81

    ESTATUTO_P                     shift and go to state 222
    ESTATUTO                       shift and go to state 68
    empty                          shift and go to state 69
    ASIGNACION                     shift and go to state 70
    CONDICION                      shift and go to state 71
    LOOP_WHILE                     shift and go to state 72
    ESCRITURA                      shift and go to state 73
    LECTURA                        shift and go to state 74
    FUNC_CALL                      shift and go to state 75
    VAR_DIM                        shift and go to state 77

state 198

    (49) EXPRESION -> EXPRE cuad_or OR pila_operadores_add . EXPRESION
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPRE                          shift and go to state 110
    EXPRESION                      shift and go to state 223
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 199

    (51) EXPRE -> EXPR cuad_and AND pila_operadores_add . EXPRE
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPR                           shift and go to state 111
    EXPRE                          shift and go to state 224
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 200

    (54) EXPR_P -> LT pila_operadores_add . EXPR
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPR                           shift and go to state 225
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 201

    (55) EXPR_P -> GT pila_operadores_add . EXPR
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPR                           shift and go to state 226
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 202

    (56) EXPR_P -> DIFF pila_operadores_add . EXPR
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPR                           shift and go to state 227
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 203

    (57) EXPR_P -> LTE pila_operadores_add . EXPR
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPR                           shift and go to state 228
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 204

    (58) EXPR_P -> GTE pila_operadores_add . EXPR
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPR                           shift and go to state 229
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 205

    (59) EXPR_P -> EQUAL pila_operadores_add . EXPR
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPR                           shift and go to state 230
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 206

    (62) EXP_P -> MAS pila_operadores_add . EXP
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXP                            shift and go to state 231
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 207

    (63) EXP_P -> MENOS pila_operadores_add . EXP
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXP                            shift and go to state 232
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 208

    (66) TERM_P -> MULT pila_operadores_add . TERM
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    TERM                           shift and go to state 233
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 209

    (67) TERM_P -> DIV pila_operadores_add . TERM
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    TERM                           shift and go to state 234
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 210

    (44) FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add . PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (45) PARM -> . EXPRESION ver_param PARM_P
    (46) PARM -> . empty
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (80) empty -> .
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARDER          reduce using rule 80 (empty -> .)
    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    PARM                           shift and go to state 235
    EXPRESION                      shift and go to state 158
    empty                          shift and go to state 159
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 211

    (36) LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while . LLVEIZQ ESTATUTO_P LLVEDER while_end

    LLVEIZQ         shift and go to state 236


state 212

    (40) PRINTABLE_P -> COMMA PRINTABLE .

    PARDER          reduce using rule 40 (PRINTABLE_P -> COMMA PRINTABLE .)


state 213

    (20) PARAMS_P -> COMMA TYPE ID ADD_VAR update_param_table . PARAMS_P
    (20) PARAMS_P -> . COMMA TYPE ID ADD_VAR update_param_table PARAMS_P
    (21) PARAMS_P -> . empty
    (80) empty -> .

    COMMA           shift and go to state 97
    PARDER          reduce using rule 80 (empty -> .)

    PARAMS_P                       shift and go to state 237
    empty                          shift and go to state 98

state 214

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA . LLVEDER endFunc

    LLVEDER         shift and go to state 238


state 215

    (31) ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .

    ID              reduce using rule 31 (ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)
    IF              reduce using rule 31 (ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)
    WHILE           reduce using rule 31 (ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)
    PRINT           reduce using rule 31 (ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)
    READ            reduce using rule 31 (ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)
    LLVEDER         reduce using rule 31 (ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)
    RETURN          reduce using rule 31 (ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA .)


state 216

    (77) VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver . CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    CORDER          shift and go to state 239


state 217

    (43) FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER . fondo_falso_pop cuad_gosub
    (91) fondo_falso_pop -> .

    ID              reduce using rule 91 (fondo_falso_pop -> .)
    IF              reduce using rule 91 (fondo_falso_pop -> .)
    WHILE           reduce using rule 91 (fondo_falso_pop -> .)
    PRINT           reduce using rule 91 (fondo_falso_pop -> .)
    READ            reduce using rule 91 (fondo_falso_pop -> .)
    LLVEDER         reduce using rule 91 (fondo_falso_pop -> .)
    RETURN          reduce using rule 91 (fondo_falso_pop -> .)

    fondo_falso_pop                shift and go to state 240

state 218

    (45) PARM -> EXPRESION ver_param PARM_P .

    PARDER          reduce using rule 45 (PARM -> EXPRESION ver_param PARM_P .)


state 219

    (47) PARM_P -> COMMA . EXPRESION ver_param PARM_P
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPRESION                      shift and go to state 241
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 220

    (48) PARM_P -> empty .

    PARDER          reduce using rule 48 (PARM_P -> empty .)


state 221

    (69) FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .

    MULT            reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    DIV             reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    MAS             reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    MENOS           reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    LT              reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    GT              reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    DIFF            reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    LTE             reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    GTE             reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    EQUAL           reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    AND             reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    OR              reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    PARDER          reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    COMMA           reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    PTOCOMA         reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)
    CORDER          reduce using rule 69 (FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop .)


state 222

    (33) CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P . LLVEDER CONDICION_P

    LLVEDER         shift and go to state 242


state 223

    (49) EXPRESION -> EXPRE cuad_or OR pila_operadores_add EXPRESION .

    PARDER          reduce using rule 49 (EXPRESION -> EXPRE cuad_or OR pila_operadores_add EXPRESION .)
    COMMA           reduce using rule 49 (EXPRESION -> EXPRE cuad_or OR pila_operadores_add EXPRESION .)
    PTOCOMA         reduce using rule 49 (EXPRESION -> EXPRE cuad_or OR pila_operadores_add EXPRESION .)
    CORDER          reduce using rule 49 (EXPRESION -> EXPRE cuad_or OR pila_operadores_add EXPRESION .)


state 224

    (51) EXPRE -> EXPR cuad_and AND pila_operadores_add EXPRE .

    OR              reduce using rule 51 (EXPRE -> EXPR cuad_and AND pila_operadores_add EXPRE .)
    PARDER          reduce using rule 51 (EXPRE -> EXPR cuad_and AND pila_operadores_add EXPRE .)
    COMMA           reduce using rule 51 (EXPRE -> EXPR cuad_and AND pila_operadores_add EXPRE .)
    PTOCOMA         reduce using rule 51 (EXPRE -> EXPR cuad_and AND pila_operadores_add EXPRE .)
    CORDER          reduce using rule 51 (EXPRE -> EXPR cuad_and AND pila_operadores_add EXPRE .)


state 225

    (54) EXPR_P -> LT pila_operadores_add EXPR .

    AND             reduce using rule 54 (EXPR_P -> LT pila_operadores_add EXPR .)
    OR              reduce using rule 54 (EXPR_P -> LT pila_operadores_add EXPR .)
    PARDER          reduce using rule 54 (EXPR_P -> LT pila_operadores_add EXPR .)
    COMMA           reduce using rule 54 (EXPR_P -> LT pila_operadores_add EXPR .)
    PTOCOMA         reduce using rule 54 (EXPR_P -> LT pila_operadores_add EXPR .)
    CORDER          reduce using rule 54 (EXPR_P -> LT pila_operadores_add EXPR .)


state 226

    (55) EXPR_P -> GT pila_operadores_add EXPR .

    AND             reduce using rule 55 (EXPR_P -> GT pila_operadores_add EXPR .)
    OR              reduce using rule 55 (EXPR_P -> GT pila_operadores_add EXPR .)
    PARDER          reduce using rule 55 (EXPR_P -> GT pila_operadores_add EXPR .)
    COMMA           reduce using rule 55 (EXPR_P -> GT pila_operadores_add EXPR .)
    PTOCOMA         reduce using rule 55 (EXPR_P -> GT pila_operadores_add EXPR .)
    CORDER          reduce using rule 55 (EXPR_P -> GT pila_operadores_add EXPR .)


state 227

    (56) EXPR_P -> DIFF pila_operadores_add EXPR .

    AND             reduce using rule 56 (EXPR_P -> DIFF pila_operadores_add EXPR .)
    OR              reduce using rule 56 (EXPR_P -> DIFF pila_operadores_add EXPR .)
    PARDER          reduce using rule 56 (EXPR_P -> DIFF pila_operadores_add EXPR .)
    COMMA           reduce using rule 56 (EXPR_P -> DIFF pila_operadores_add EXPR .)
    PTOCOMA         reduce using rule 56 (EXPR_P -> DIFF pila_operadores_add EXPR .)
    CORDER          reduce using rule 56 (EXPR_P -> DIFF pila_operadores_add EXPR .)


state 228

    (57) EXPR_P -> LTE pila_operadores_add EXPR .

    AND             reduce using rule 57 (EXPR_P -> LTE pila_operadores_add EXPR .)
    OR              reduce using rule 57 (EXPR_P -> LTE pila_operadores_add EXPR .)
    PARDER          reduce using rule 57 (EXPR_P -> LTE pila_operadores_add EXPR .)
    COMMA           reduce using rule 57 (EXPR_P -> LTE pila_operadores_add EXPR .)
    PTOCOMA         reduce using rule 57 (EXPR_P -> LTE pila_operadores_add EXPR .)
    CORDER          reduce using rule 57 (EXPR_P -> LTE pila_operadores_add EXPR .)


state 229

    (58) EXPR_P -> GTE pila_operadores_add EXPR .

    AND             reduce using rule 58 (EXPR_P -> GTE pila_operadores_add EXPR .)
    OR              reduce using rule 58 (EXPR_P -> GTE pila_operadores_add EXPR .)
    PARDER          reduce using rule 58 (EXPR_P -> GTE pila_operadores_add EXPR .)
    COMMA           reduce using rule 58 (EXPR_P -> GTE pila_operadores_add EXPR .)
    PTOCOMA         reduce using rule 58 (EXPR_P -> GTE pila_operadores_add EXPR .)
    CORDER          reduce using rule 58 (EXPR_P -> GTE pila_operadores_add EXPR .)


state 230

    (59) EXPR_P -> EQUAL pila_operadores_add EXPR .

    AND             reduce using rule 59 (EXPR_P -> EQUAL pila_operadores_add EXPR .)
    OR              reduce using rule 59 (EXPR_P -> EQUAL pila_operadores_add EXPR .)
    PARDER          reduce using rule 59 (EXPR_P -> EQUAL pila_operadores_add EXPR .)
    COMMA           reduce using rule 59 (EXPR_P -> EQUAL pila_operadores_add EXPR .)
    PTOCOMA         reduce using rule 59 (EXPR_P -> EQUAL pila_operadores_add EXPR .)
    CORDER          reduce using rule 59 (EXPR_P -> EQUAL pila_operadores_add EXPR .)


state 231

    (62) EXP_P -> MAS pila_operadores_add EXP .

    LT              reduce using rule 62 (EXP_P -> MAS pila_operadores_add EXP .)
    GT              reduce using rule 62 (EXP_P -> MAS pila_operadores_add EXP .)
    DIFF            reduce using rule 62 (EXP_P -> MAS pila_operadores_add EXP .)
    LTE             reduce using rule 62 (EXP_P -> MAS pila_operadores_add EXP .)
    GTE             reduce using rule 62 (EXP_P -> MAS pila_operadores_add EXP .)
    EQUAL           reduce using rule 62 (EXP_P -> MAS pila_operadores_add EXP .)
    AND             reduce using rule 62 (EXP_P -> MAS pila_operadores_add EXP .)
    OR              reduce using rule 62 (EXP_P -> MAS pila_operadores_add EXP .)
    PARDER          reduce using rule 62 (EXP_P -> MAS pila_operadores_add EXP .)
    COMMA           reduce using rule 62 (EXP_P -> MAS pila_operadores_add EXP .)
    PTOCOMA         reduce using rule 62 (EXP_P -> MAS pila_operadores_add EXP .)
    CORDER          reduce using rule 62 (EXP_P -> MAS pila_operadores_add EXP .)


state 232

    (63) EXP_P -> MENOS pila_operadores_add EXP .

    LT              reduce using rule 63 (EXP_P -> MENOS pila_operadores_add EXP .)
    GT              reduce using rule 63 (EXP_P -> MENOS pila_operadores_add EXP .)
    DIFF            reduce using rule 63 (EXP_P -> MENOS pila_operadores_add EXP .)
    LTE             reduce using rule 63 (EXP_P -> MENOS pila_operadores_add EXP .)
    GTE             reduce using rule 63 (EXP_P -> MENOS pila_operadores_add EXP .)
    EQUAL           reduce using rule 63 (EXP_P -> MENOS pila_operadores_add EXP .)
    AND             reduce using rule 63 (EXP_P -> MENOS pila_operadores_add EXP .)
    OR              reduce using rule 63 (EXP_P -> MENOS pila_operadores_add EXP .)
    PARDER          reduce using rule 63 (EXP_P -> MENOS pila_operadores_add EXP .)
    COMMA           reduce using rule 63 (EXP_P -> MENOS pila_operadores_add EXP .)
    PTOCOMA         reduce using rule 63 (EXP_P -> MENOS pila_operadores_add EXP .)
    CORDER          reduce using rule 63 (EXP_P -> MENOS pila_operadores_add EXP .)


state 233

    (66) TERM_P -> MULT pila_operadores_add TERM .

    MAS             reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    MENOS           reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    LT              reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    GT              reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    DIFF            reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    LTE             reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    GTE             reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    EQUAL           reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    AND             reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    OR              reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    PARDER          reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    COMMA           reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    PTOCOMA         reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)
    CORDER          reduce using rule 66 (TERM_P -> MULT pila_operadores_add TERM .)


state 234

    (67) TERM_P -> DIV pila_operadores_add TERM .

    MAS             reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    MENOS           reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    LT              reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    GT              reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    DIFF            reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    LTE             reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    GTE             reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    EQUAL           reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    AND             reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    OR              reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    PARDER          reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    COMMA           reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    PTOCOMA         reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)
    CORDER          reduce using rule 67 (TERM_P -> DIV pila_operadores_add TERM .)


state 235

    (44) FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM . ver_param_num PARDER fondo_falso_pop cuad_gosub
    (115) ver_param_num -> .

    PARDER          reduce using rule 115 (ver_param_num -> .)

    ver_param_num                  shift and go to state 243

state 236

    (36) LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ . ESTATUTO_P LLVEDER while_end
    (29) ESTATUTO_P -> . ESTATUTO ESTATUTO_P
    (30) ESTATUTO_P -> . empty
    (23) ESTATUTO -> . ASIGNACION
    (24) ESTATUTO -> . CONDICION
    (25) ESTATUTO -> . LOOP_WHILE
    (26) ESTATUTO -> . ESCRITURA
    (27) ESTATUTO -> . LECTURA
    (28) ESTATUTO -> . FUNC_CALL
    (80) empty -> .
    (31) ASIGNACION -> . ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (32) ASIGNACION -> . VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (33) CONDICION -> . IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P
    (36) LOOP_WHILE -> . WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end
    (37) ESCRITURA -> . PRINT PARIZQ PRINTABLE PARDER
    (42) LECTURA -> . READ PARIZQ ID cuad_read PARDER
    (43) FUNC_CALL -> . ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    LLVEDER         reduce using rule 80 (empty -> .)
    ID              shift and go to state 76
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81

    ESTATUTO_P                     shift and go to state 244
    ESTATUTO                       shift and go to state 68
    empty                          shift and go to state 69
    ASIGNACION                     shift and go to state 70
    CONDICION                      shift and go to state 71
    LOOP_WHILE                     shift and go to state 72
    ESCRITURA                      shift and go to state 73
    LECTURA                        shift and go to state 74
    FUNC_CALL                      shift and go to state 75
    VAR_DIM                        shift and go to state 77

state 237

    (20) PARAMS_P -> COMMA TYPE ID ADD_VAR update_param_table PARAMS_P .

    PARDER          reduce using rule 20 (PARAMS_P -> COMMA TYPE ID ADD_VAR update_param_table PARAMS_P .)


state 238

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER . endFunc
    (111) endFunc -> .

    FUNC            reduce using rule 111 (endFunc -> .)
    VOID            reduce using rule 111 (endFunc -> .)

    endFunc                        shift and go to state 245

state 239

    (77) VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER . fondo_falso_pop matAux ver_dir_num cuad_var_dim
    (91) fondo_falso_pop -> .

    CORIZQ          reduce using rule 91 (fondo_falso_pop -> .)
    ASIGN           reduce using rule 91 (fondo_falso_pop -> .)
    MULT            reduce using rule 91 (fondo_falso_pop -> .)
    DIV             reduce using rule 91 (fondo_falso_pop -> .)
    MAS             reduce using rule 91 (fondo_falso_pop -> .)
    MENOS           reduce using rule 91 (fondo_falso_pop -> .)
    LT              reduce using rule 91 (fondo_falso_pop -> .)
    GT              reduce using rule 91 (fondo_falso_pop -> .)
    DIFF            reduce using rule 91 (fondo_falso_pop -> .)
    LTE             reduce using rule 91 (fondo_falso_pop -> .)
    GTE             reduce using rule 91 (fondo_falso_pop -> .)
    EQUAL           reduce using rule 91 (fondo_falso_pop -> .)
    AND             reduce using rule 91 (fondo_falso_pop -> .)
    OR              reduce using rule 91 (fondo_falso_pop -> .)
    PARDER          reduce using rule 91 (fondo_falso_pop -> .)
    COMMA           reduce using rule 91 (fondo_falso_pop -> .)
    PTOCOMA         reduce using rule 91 (fondo_falso_pop -> .)
    CORDER          reduce using rule 91 (fondo_falso_pop -> .)

    fondo_falso_pop                shift and go to state 246

state 240

    (43) FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop . cuad_gosub
    (116) cuad_gosub -> .

    ID              reduce using rule 116 (cuad_gosub -> .)
    IF              reduce using rule 116 (cuad_gosub -> .)
    WHILE           reduce using rule 116 (cuad_gosub -> .)
    PRINT           reduce using rule 116 (cuad_gosub -> .)
    READ            reduce using rule 116 (cuad_gosub -> .)
    LLVEDER         reduce using rule 116 (cuad_gosub -> .)
    RETURN          reduce using rule 116 (cuad_gosub -> .)

    cuad_gosub                     shift and go to state 247

state 241

    (47) PARM_P -> COMMA EXPRESION . ver_param PARM_P
    (114) ver_param -> .

    COMMA           reduce using rule 114 (ver_param -> .)
    PARDER          reduce using rule 114 (ver_param -> .)

    ver_param                      shift and go to state 248

state 242

    (33) CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER . CONDICION_P
    (34) CONDICION_P -> . ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end
    (35) CONDICION_P -> . if_end
    (101) if_end -> .

    ELSE            shift and go to state 250
    ID              reduce using rule 101 (if_end -> .)
    IF              reduce using rule 101 (if_end -> .)
    WHILE           reduce using rule 101 (if_end -> .)
    PRINT           reduce using rule 101 (if_end -> .)
    READ            reduce using rule 101 (if_end -> .)
    LLVEDER         reduce using rule 101 (if_end -> .)
    RETURN          reduce using rule 101 (if_end -> .)

    CONDICION_P                    shift and go to state 249
    if_end                         shift and go to state 251

state 243

    (44) FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num . PARDER fondo_falso_pop cuad_gosub

    PARDER          shift and go to state 252


state 244

    (36) LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P . LLVEDER while_end

    LLVEDER         shift and go to state 253


state 245

    (10) FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc .

    FUNC            reduce using rule 10 (FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc .)
    VOID            reduce using rule 10 (FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc .)


state 246

    (77) VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop . matAux ver_dir_num cuad_var_dim
    (78) matAux -> . CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop
    (79) matAux -> . empty
    (80) empty -> .

    CORIZQ          shift and go to state 254
    ASIGN           reduce using rule 80 (empty -> .)
    MULT            reduce using rule 80 (empty -> .)
    DIV             reduce using rule 80 (empty -> .)
    MAS             reduce using rule 80 (empty -> .)
    MENOS           reduce using rule 80 (empty -> .)
    LT              reduce using rule 80 (empty -> .)
    GT              reduce using rule 80 (empty -> .)
    DIFF            reduce using rule 80 (empty -> .)
    LTE             reduce using rule 80 (empty -> .)
    GTE             reduce using rule 80 (empty -> .)
    EQUAL           reduce using rule 80 (empty -> .)
    AND             reduce using rule 80 (empty -> .)
    OR              reduce using rule 80 (empty -> .)
    PARDER          reduce using rule 80 (empty -> .)
    COMMA           reduce using rule 80 (empty -> .)
    PTOCOMA         reduce using rule 80 (empty -> .)
    CORDER          reduce using rule 80 (empty -> .)

    matAux                         shift and go to state 255
    empty                          shift and go to state 256

state 247

    (43) FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .

    ID              reduce using rule 43 (FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    IF              reduce using rule 43 (FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    WHILE           reduce using rule 43 (FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    PRINT           reduce using rule 43 (FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    READ            reduce using rule 43 (FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    LLVEDER         reduce using rule 43 (FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    RETURN          reduce using rule 43 (FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)


state 248

    (47) PARM_P -> COMMA EXPRESION ver_param . PARM_P
    (47) PARM_P -> . COMMA EXPRESION ver_param PARM_P
    (48) PARM_P -> . empty
    (80) empty -> .

    COMMA           shift and go to state 219
    PARDER          reduce using rule 80 (empty -> .)

    PARM_P                         shift and go to state 257
    empty                          shift and go to state 220

state 249

    (33) CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P .

    ID              reduce using rule 33 (CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P .)
    IF              reduce using rule 33 (CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P .)
    WHILE           reduce using rule 33 (CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P .)
    PRINT           reduce using rule 33 (CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P .)
    READ            reduce using rule 33 (CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P .)
    LLVEDER         reduce using rule 33 (CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P .)
    RETURN          reduce using rule 33 (CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P .)


state 250

    (34) CONDICION_P -> ELSE . else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end
    (102) else_jump -> .

    LLVEIZQ         reduce using rule 102 (else_jump -> .)

    else_jump                      shift and go to state 258

state 251

    (35) CONDICION_P -> if_end .

    ID              reduce using rule 35 (CONDICION_P -> if_end .)
    IF              reduce using rule 35 (CONDICION_P -> if_end .)
    WHILE           reduce using rule 35 (CONDICION_P -> if_end .)
    PRINT           reduce using rule 35 (CONDICION_P -> if_end .)
    READ            reduce using rule 35 (CONDICION_P -> if_end .)
    LLVEDER         reduce using rule 35 (CONDICION_P -> if_end .)
    RETURN          reduce using rule 35 (CONDICION_P -> if_end .)


state 252

    (44) FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER . fondo_falso_pop cuad_gosub
    (91) fondo_falso_pop -> .

    MULT            reduce using rule 91 (fondo_falso_pop -> .)
    DIV             reduce using rule 91 (fondo_falso_pop -> .)
    MAS             reduce using rule 91 (fondo_falso_pop -> .)
    MENOS           reduce using rule 91 (fondo_falso_pop -> .)
    LT              reduce using rule 91 (fondo_falso_pop -> .)
    GT              reduce using rule 91 (fondo_falso_pop -> .)
    DIFF            reduce using rule 91 (fondo_falso_pop -> .)
    LTE             reduce using rule 91 (fondo_falso_pop -> .)
    GTE             reduce using rule 91 (fondo_falso_pop -> .)
    EQUAL           reduce using rule 91 (fondo_falso_pop -> .)
    AND             reduce using rule 91 (fondo_falso_pop -> .)
    OR              reduce using rule 91 (fondo_falso_pop -> .)
    PARDER          reduce using rule 91 (fondo_falso_pop -> .)
    COMMA           reduce using rule 91 (fondo_falso_pop -> .)
    PTOCOMA         reduce using rule 91 (fondo_falso_pop -> .)
    CORDER          reduce using rule 91 (fondo_falso_pop -> .)

    fondo_falso_pop                shift and go to state 259

state 253

    (36) LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER . while_end
    (105) while_end -> .

    ID              reduce using rule 105 (while_end -> .)
    IF              reduce using rule 105 (while_end -> .)
    WHILE           reduce using rule 105 (while_end -> .)
    PRINT           reduce using rule 105 (while_end -> .)
    READ            reduce using rule 105 (while_end -> .)
    LLVEDER         reduce using rule 105 (while_end -> .)
    RETURN          reduce using rule 105 (while_end -> .)

    while_end                      shift and go to state 260

state 254

    (78) matAux -> CORIZQ . ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop
    (119) ver_dim -> .

    PARIZQ          reduce using rule 119 (ver_dim -> .)
    ID              reduce using rule 119 (ver_dim -> .)
    CTE_INT         reduce using rule 119 (ver_dim -> .)
    CTE_FLT         reduce using rule 119 (ver_dim -> .)
    CTE_CHAR        reduce using rule 119 (ver_dim -> .)

    ver_dim                        shift and go to state 261

state 255

    (77) VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux . ver_dir_num cuad_var_dim
    (120) ver_dir_num -> .

    ASIGN           reduce using rule 120 (ver_dir_num -> .)
    MULT            reduce using rule 120 (ver_dir_num -> .)
    DIV             reduce using rule 120 (ver_dir_num -> .)
    MAS             reduce using rule 120 (ver_dir_num -> .)
    MENOS           reduce using rule 120 (ver_dir_num -> .)
    LT              reduce using rule 120 (ver_dir_num -> .)
    GT              reduce using rule 120 (ver_dir_num -> .)
    DIFF            reduce using rule 120 (ver_dir_num -> .)
    LTE             reduce using rule 120 (ver_dir_num -> .)
    GTE             reduce using rule 120 (ver_dir_num -> .)
    EQUAL           reduce using rule 120 (ver_dir_num -> .)
    AND             reduce using rule 120 (ver_dir_num -> .)
    OR              reduce using rule 120 (ver_dir_num -> .)
    PARDER          reduce using rule 120 (ver_dir_num -> .)
    COMMA           reduce using rule 120 (ver_dir_num -> .)
    PTOCOMA         reduce using rule 120 (ver_dir_num -> .)
    CORDER          reduce using rule 120 (ver_dir_num -> .)

    ver_dir_num                    shift and go to state 262

state 256

    (79) matAux -> empty .

    ASIGN           reduce using rule 79 (matAux -> empty .)
    MULT            reduce using rule 79 (matAux -> empty .)
    DIV             reduce using rule 79 (matAux -> empty .)
    MAS             reduce using rule 79 (matAux -> empty .)
    MENOS           reduce using rule 79 (matAux -> empty .)
    LT              reduce using rule 79 (matAux -> empty .)
    GT              reduce using rule 79 (matAux -> empty .)
    DIFF            reduce using rule 79 (matAux -> empty .)
    LTE             reduce using rule 79 (matAux -> empty .)
    GTE             reduce using rule 79 (matAux -> empty .)
    EQUAL           reduce using rule 79 (matAux -> empty .)
    AND             reduce using rule 79 (matAux -> empty .)
    OR              reduce using rule 79 (matAux -> empty .)
    PARDER          reduce using rule 79 (matAux -> empty .)
    COMMA           reduce using rule 79 (matAux -> empty .)
    PTOCOMA         reduce using rule 79 (matAux -> empty .)
    CORDER          reduce using rule 79 (matAux -> empty .)


state 257

    (47) PARM_P -> COMMA EXPRESION ver_param PARM_P .

    PARDER          reduce using rule 47 (PARM_P -> COMMA EXPRESION ver_param PARM_P .)


state 258

    (34) CONDICION_P -> ELSE else_jump . LLVEIZQ ESTATUTO_P LLVEDER if_end

    LLVEIZQ         shift and go to state 263


state 259

    (44) FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop . cuad_gosub
    (116) cuad_gosub -> .

    MULT            reduce using rule 116 (cuad_gosub -> .)
    DIV             reduce using rule 116 (cuad_gosub -> .)
    MAS             reduce using rule 116 (cuad_gosub -> .)
    MENOS           reduce using rule 116 (cuad_gosub -> .)
    LT              reduce using rule 116 (cuad_gosub -> .)
    GT              reduce using rule 116 (cuad_gosub -> .)
    DIFF            reduce using rule 116 (cuad_gosub -> .)
    LTE             reduce using rule 116 (cuad_gosub -> .)
    GTE             reduce using rule 116 (cuad_gosub -> .)
    EQUAL           reduce using rule 116 (cuad_gosub -> .)
    AND             reduce using rule 116 (cuad_gosub -> .)
    OR              reduce using rule 116 (cuad_gosub -> .)
    PARDER          reduce using rule 116 (cuad_gosub -> .)
    COMMA           reduce using rule 116 (cuad_gosub -> .)
    PTOCOMA         reduce using rule 116 (cuad_gosub -> .)
    CORDER          reduce using rule 116 (cuad_gosub -> .)

    cuad_gosub                     shift and go to state 264

state 260

    (36) LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end .

    ID              reduce using rule 36 (LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end .)
    IF              reduce using rule 36 (LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end .)
    WHILE           reduce using rule 36 (LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end .)
    PRINT           reduce using rule 36 (LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end .)
    READ            reduce using rule 36 (LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end .)
    LLVEDER         reduce using rule 36 (LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end .)
    RETURN          reduce using rule 36 (LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end .)


state 261

    (78) matAux -> CORIZQ ver_dim . fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop
    (90) fondo_falso_add -> .

    PARIZQ          reduce using rule 90 (fondo_falso_add -> .)
    ID              reduce using rule 90 (fondo_falso_add -> .)
    CTE_INT         reduce using rule 90 (fondo_falso_add -> .)
    CTE_FLT         reduce using rule 90 (fondo_falso_add -> .)
    CTE_CHAR        reduce using rule 90 (fondo_falso_add -> .)

    fondo_falso_add                shift and go to state 265

state 262

    (77) VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num . cuad_var_dim
    (122) cuad_var_dim -> .

    ASIGN           reduce using rule 122 (cuad_var_dim -> .)
    MULT            reduce using rule 122 (cuad_var_dim -> .)
    DIV             reduce using rule 122 (cuad_var_dim -> .)
    MAS             reduce using rule 122 (cuad_var_dim -> .)
    MENOS           reduce using rule 122 (cuad_var_dim -> .)
    LT              reduce using rule 122 (cuad_var_dim -> .)
    GT              reduce using rule 122 (cuad_var_dim -> .)
    DIFF            reduce using rule 122 (cuad_var_dim -> .)
    LTE             reduce using rule 122 (cuad_var_dim -> .)
    GTE             reduce using rule 122 (cuad_var_dim -> .)
    EQUAL           reduce using rule 122 (cuad_var_dim -> .)
    AND             reduce using rule 122 (cuad_var_dim -> .)
    OR              reduce using rule 122 (cuad_var_dim -> .)
    PARDER          reduce using rule 122 (cuad_var_dim -> .)
    COMMA           reduce using rule 122 (cuad_var_dim -> .)
    PTOCOMA         reduce using rule 122 (cuad_var_dim -> .)
    CORDER          reduce using rule 122 (cuad_var_dim -> .)

    cuad_var_dim                   shift and go to state 266

state 263

    (34) CONDICION_P -> ELSE else_jump LLVEIZQ . ESTATUTO_P LLVEDER if_end
    (29) ESTATUTO_P -> . ESTATUTO ESTATUTO_P
    (30) ESTATUTO_P -> . empty
    (23) ESTATUTO -> . ASIGNACION
    (24) ESTATUTO -> . CONDICION
    (25) ESTATUTO -> . LOOP_WHILE
    (26) ESTATUTO -> . ESCRITURA
    (27) ESTATUTO -> . LECTURA
    (28) ESTATUTO -> . FUNC_CALL
    (80) empty -> .
    (31) ASIGNACION -> . ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (32) ASIGNACION -> . VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA
    (33) CONDICION -> . IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P
    (36) LOOP_WHILE -> . WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end
    (37) ESCRITURA -> . PRINT PARIZQ PRINTABLE PARDER
    (42) LECTURA -> . READ PARIZQ ID cuad_read PARDER
    (43) FUNC_CALL -> . ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    LLVEDER         reduce using rule 80 (empty -> .)
    ID              shift and go to state 76
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81

    ESTATUTO_P                     shift and go to state 267
    ESTATUTO                       shift and go to state 68
    empty                          shift and go to state 69
    ASIGNACION                     shift and go to state 70
    CONDICION                      shift and go to state 71
    LOOP_WHILE                     shift and go to state 72
    ESCRITURA                      shift and go to state 73
    LECTURA                        shift and go to state 74
    FUNC_CALL                      shift and go to state 75
    VAR_DIM                        shift and go to state 77

state 264

    (44) FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .

    MULT            reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    DIV             reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    MAS             reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    MENOS           reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    LT              reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    GT              reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    DIFF            reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    LTE             reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    GTE             reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    EQUAL           reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    AND             reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    OR              reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    PARDER          reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    COMMA           reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    PTOCOMA         reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)
    CORDER          reduce using rule 44 (FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub .)


state 265

    (78) matAux -> CORIZQ ver_dim fondo_falso_add . EXPRESION cuad_ver CORDER fondo_falso_pop
    (49) EXPRESION -> . EXPRE cuad_or OR pila_operadores_add EXPRESION
    (50) EXPRESION -> . EXPRE cuad_or
    (51) EXPRE -> . EXPR cuad_and AND pila_operadores_add EXPRE
    (52) EXPRE -> . EXPR cuad_and
    (53) EXPR -> . EXP cuad_comp EXPR_P
    (61) EXP -> . TERM cuad_sumres EXP_P
    (65) TERM -> . FACTOR cuad_muldiv TERM_P
    (69) FACTOR -> . PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop
    (70) FACTOR -> . VAR_CTE
    (71) VAR_CTE -> . ID pila_operando_id
    (72) VAR_CTE -> . CTE_INT pila_operando_int
    (73) VAR_CTE -> . CTE_FLT pila_operando_float
    (74) VAR_CTE -> . CTE_CHAR pila_operando_char
    (75) VAR_CTE -> . FUNC_CALL_EXP
    (76) VAR_CTE -> . VAR_DIM
    (44) FUNC_CALL_EXP -> . ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub
    (77) VAR_DIM -> . ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim

    PARIZQ          shift and go to state 108
    ID              shift and go to state 116
    CTE_INT         shift and go to state 117
    CTE_FLT         shift and go to state 118
    CTE_CHAR        shift and go to state 119

    EXPRESION                      shift and go to state 268
    EXPRE                          shift and go to state 110
    EXPR                           shift and go to state 111
    EXP                            shift and go to state 112
    TERM                           shift and go to state 113
    FACTOR                         shift and go to state 114
    VAR_CTE                        shift and go to state 115
    FUNC_CALL_EXP                  shift and go to state 120
    VAR_DIM                        shift and go to state 121

state 266

    (77) VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .

    ASIGN           reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    MULT            reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    DIV             reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    MAS             reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    MENOS           reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    LT              reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    GT              reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    DIFF            reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    LTE             reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    GTE             reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    EQUAL           reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    AND             reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    OR              reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    PARDER          reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    COMMA           reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    PTOCOMA         reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)
    CORDER          reduce using rule 77 (VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim .)


state 267

    (34) CONDICION_P -> ELSE else_jump LLVEIZQ ESTATUTO_P . LLVEDER if_end

    LLVEDER         shift and go to state 269


state 268

    (78) matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION . cuad_ver CORDER fondo_falso_pop
    (121) cuad_ver -> .

    CORDER          reduce using rule 121 (cuad_ver -> .)

    cuad_ver                       shift and go to state 270

state 269

    (34) CONDICION_P -> ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER . if_end
    (101) if_end -> .

    ID              reduce using rule 101 (if_end -> .)
    IF              reduce using rule 101 (if_end -> .)
    WHILE           reduce using rule 101 (if_end -> .)
    PRINT           reduce using rule 101 (if_end -> .)
    READ            reduce using rule 101 (if_end -> .)
    LLVEDER         reduce using rule 101 (if_end -> .)
    RETURN          reduce using rule 101 (if_end -> .)

    if_end                         shift and go to state 271

state 270

    (78) matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver . CORDER fondo_falso_pop

    CORDER          shift and go to state 272


state 271

    (34) CONDICION_P -> ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end .

    ID              reduce using rule 34 (CONDICION_P -> ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end .)
    IF              reduce using rule 34 (CONDICION_P -> ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end .)
    WHILE           reduce using rule 34 (CONDICION_P -> ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end .)
    PRINT           reduce using rule 34 (CONDICION_P -> ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end .)
    READ            reduce using rule 34 (CONDICION_P -> ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end .)
    LLVEDER         reduce using rule 34 (CONDICION_P -> ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end .)
    RETURN          reduce using rule 34 (CONDICION_P -> ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end .)


state 272

    (78) matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER . fondo_falso_pop
    (91) fondo_falso_pop -> .

    ASIGN           reduce using rule 91 (fondo_falso_pop -> .)
    MULT            reduce using rule 91 (fondo_falso_pop -> .)
    DIV             reduce using rule 91 (fondo_falso_pop -> .)
    MAS             reduce using rule 91 (fondo_falso_pop -> .)
    MENOS           reduce using rule 91 (fondo_falso_pop -> .)
    LT              reduce using rule 91 (fondo_falso_pop -> .)
    GT              reduce using rule 91 (fondo_falso_pop -> .)
    DIFF            reduce using rule 91 (fondo_falso_pop -> .)
    LTE             reduce using rule 91 (fondo_falso_pop -> .)
    GTE             reduce using rule 91 (fondo_falso_pop -> .)
    EQUAL           reduce using rule 91 (fondo_falso_pop -> .)
    AND             reduce using rule 91 (fondo_falso_pop -> .)
    OR              reduce using rule 91 (fondo_falso_pop -> .)
    PARDER          reduce using rule 91 (fondo_falso_pop -> .)
    COMMA           reduce using rule 91 (fondo_falso_pop -> .)
    PTOCOMA         reduce using rule 91 (fondo_falso_pop -> .)
    CORDER          reduce using rule 91 (fondo_falso_pop -> .)

    fondo_falso_pop                shift and go to state 273

state 273

    (78) matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .

    ASIGN           reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    MULT            reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    DIV             reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    MAS             reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    MENOS           reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    LT              reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    GT              reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    DIFF            reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    LTE             reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    GTE             reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    EQUAL           reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    AND             reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    OR              reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    PARDER          reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    COMMA           reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    PTOCOMA         reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)
    CORDER          reduce using rule 78 (matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop .)

