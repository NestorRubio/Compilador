
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGN BOOL CHAR COMMA COMMENT CORDER CORIZQ CTE_CHAR CTE_FLT CTE_INT CTE_STR DIFF DIV ELSE EQUAL FLOAT FUNC GT GTE ID IF INT LLVEDER LLVEIZQ LT LTE MAIN MAS MENOS MULT OR PARDER PARIZQ PRINT PROGRAM PTOCOMA READ RETURN VAR VOID WHILE\n    PROGRAMA : PROGRAM CREATE_DIRFUNC ID PTOCOMA VARS_P FUNCS_P MAIN_G\n    \n    VARS : VAR TYPE ID ADD_VAR VARS_PP PTOCOMA\n         | VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA\n    \n    VARS_P : VARS VARS_P\n           | empty   \n    \n    VARS_PP : COMMA ID ADD_VAR VARS_PP\n            | empty\n    \n    MAT_AUX : CORIZQ CTE_INT add_dim CORDER\n            | empty\n    \n    FUNCS : FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc\n          | FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc\n    \n    FUNCS_P : FUNCS FUNCS_P\n            | empty\n    \n    TYPE : INT CURR_TYPE\n         | FLOAT CURR_TYPE\n         | BOOL CURR_TYPE\n         | CHAR CURR_TYPE\n    \n    PARAMS : TYPE ID ADD_VAR update_param_table PARAMS_P\n           | empty\n    \n    PARAMS_P : COMMA TYPE ID ADD_VAR update_param_table PARAMS_P\n             | empty\n    \n    MAIN_G : VOID MAIN set_start change_func PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER endProg\n    \n    ESTATUTO : ASIGNACION\n             | CONDICION\n             | LOOP_WHILE\n             | ESCRITURA\n             | LECTURA \n             | FUNC_CALL  \n    \n    ESTATUTO_P : ESTATUTO ESTATUTO_P\n               | empty\n    \n    ASIGNACION : ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA\n               | VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA\n    \n    CONDICION : IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P\n    \n    CONDICION_P : ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end\n                | if_end\n    \n    LOOP_WHILE : WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end\n    \n    ESCRITURA : PRINT PARIZQ PRINTABLE PARDER\n    \n    PRINTABLE : EXPRESION cuad_print PRINTABLE_P\n              | CTE_STR cuad_print_str PRINTABLE_P\n    \n    PRINTABLE_P : COMMA PRINTABLE\n                | empty\n    \n    LECTURA : READ PARIZQ ID cuad_read PARDER\n    \n    FUNC_CALL : ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub \n    \n    FUNC_CALL_EXP : ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub\n    \n    PARM : EXPRESION ver_param PARM_P\n         | empty\n    \n    PARM_P : COMMA EXPRESION ver_param PARM_P\n           | empty\n    \n    EXPRESION : EXPRE cuad_or OR pila_operadores_add EXPRESION\n              | EXPRE cuad_or \n    \n    EXPRE : EXPR cuad_and AND pila_operadores_add EXPRE\n          | EXPR cuad_and\n    \n    EXPR : EXP cuad_comp EXPR_P\n    \n    EXPR_P : LT pila_operadores_add EXPR\n           | GT pila_operadores_add EXPR\n           | DIFF pila_operadores_add EXPR\n           | LTE pila_operadores_add EXPR\n           | GTE pila_operadores_add EXPR\n           | EQUAL pila_operadores_add EXPR\n           | empty\n    \n    EXP : TERM cuad_sumres EXP_P\n    \n    EXP_P : MAS pila_operadores_add EXP\n          | MENOS pila_operadores_add EXP\n          | empty\n    \n    TERM : FACTOR cuad_muldiv TERM_P\n    \n    TERM_P : MULT pila_operadores_add TERM\n           | DIV pila_operadores_add TERM\n           | empty\n    \n    FACTOR : PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop\n            | VAR_CTE\n    \n    VAR_CTE : ID pila_operando_id\n            | CTE_INT pila_operando_int\n            | CTE_FLT pila_operando_float\n            | CTE_CHAR pila_operando_char\n            | FUNC_CALL_EXP\n            | VAR_DIM\n    \n    VAR_DIM : ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim\n    \n    matAux : CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop\n           | empty\n    empty :CREATE_DIRFUNC :CURR_TYPE :ADD_VAR :ADD_FUNC :pila_operando_id :pila_operando_int :pila_operando_float :pila_operando_char :pila_operadores_add :fondo_falso_add :fondo_falso_pop :cuad_and :cuad_or :cuad_comp :cuad_sumres :cuad_muldiv :cuad_asign :cuad_read :cuad_return :ver_if :if_end :else_jump :add_jump :ver_while :while_end :cuad_print :cuad_print_str :change_func :update_param_table :func_jump :endFunc :ver_func_id_era :ver_func_id_era_exp :ver_param :ver_param_num :cuad_gosub :add_dim :actAddr :ver_dim :ver_dir_num :cuad_ver :cuad_var_dim :set_start :endProg :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,20,87,103,],[0,-1,-124,-22,]),'ID':([2,3,15,16,17,18,19,23,24,26,27,28,29,32,39,48,60,62,68,70,71,72,73,74,75,83,84,91,92,94,95,100,104,105,106,107,108,122,127,128,131,132,133,135,148,156,163,164,166,167,168,169,170,171,174,175,178,179,181,184,187,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,215,217,219,236,240,242,247,249,251,253,254,260,261,263,265,269,271,],[-81,4,25,-82,-82,-82,-82,31,-82,-14,-15,-16,-17,36,46,55,76,-110,76,-23,-24,-25,-26,-27,-28,76,-110,-89,116,116,126,76,-89,-119,-90,116,-90,116,152,116,116,-90,116,116,-37,116,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-90,116,-42,-32,76,116,116,116,116,116,116,116,116,116,116,116,116,116,-31,-91,116,76,-116,-101,-43,-33,-35,-105,-119,-36,-90,76,116,-101,-34,]),'PTOCOMA':([4,25,33,37,40,46,53,58,59,65,66,86,110,111,112,113,114,115,116,117,118,119,120,121,130,134,137,138,139,140,141,142,144,145,146,153,155,160,165,172,173,176,177,180,189,191,196,221,223,224,225,226,227,228,229,230,231,232,233,234,239,246,252,255,256,259,262,264,266,272,273,],[5,-83,-80,44,-7,-83,-80,-80,-6,-118,-9,102,-93,-92,-94,-95,-96,-70,-85,-86,-87,-88,-75,-76,-8,-97,-50,-52,-80,-80,-80,-71,-72,-73,-74,-99,-97,195,-53,-60,-61,-64,-65,-68,214,215,-91,-69,-49,-51,-54,-55,-56,-57,-58,-59,-62,-63,-66,-67,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'VAR':([5,7,44,102,],[9,9,-2,-3,]),'FUNC':([5,6,7,8,11,14,44,102,154,190,238,245,],[-80,13,-80,-5,13,-4,-2,-3,-111,-11,-111,-10,]),'VOID':([5,6,7,8,10,11,12,13,14,22,44,102,154,190,238,245,],[-80,-80,-80,-5,21,-80,-13,24,-4,-12,-2,-3,-111,-11,-111,-10,]),'INT':([9,13,42,51,97,],[16,16,16,16,16,]),'FLOAT':([9,13,42,51,97,],[17,17,17,17,17,]),'BOOL':([9,13,42,51,97,],[18,18,18,18,18,]),'CHAR':([9,13,42,51,97,],[19,19,19,19,19,]),'MAIN':([21,],[30,]),'CORIZQ':([25,33,58,76,89,116,142,239,246,],[-83,38,64,-85,105,-85,105,-91,254,]),'COMMA':([25,33,46,53,55,61,82,110,111,112,113,114,115,116,117,118,119,120,121,124,125,137,138,139,140,141,142,144,145,146,149,150,152,158,165,172,173,176,177,180,188,194,196,213,221,223,224,225,226,227,228,229,230,231,232,233,234,239,241,246,248,252,255,256,259,262,264,266,272,273,],[-83,39,-83,39,-83,-109,97,-93,-92,-94,-95,-96,-70,-85,-86,-87,-88,-75,-76,-106,-107,-50,-52,-80,-80,-80,-71,-72,-73,-74,184,184,-83,-114,-53,-60,-61,-64,-65,-68,-109,219,-91,97,-69,-49,-51,-54,-55,-56,-57,-58,-59,-62,-63,-66,-67,-91,-114,-80,219,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'PARIZQ':([30,31,34,35,36,41,43,76,78,79,80,81,90,91,92,93,94,104,105,106,107,108,116,122,128,131,132,133,135,143,156,163,164,166,167,168,169,170,171,174,175,178,179,181,184,198,199,200,201,202,203,204,205,206,207,208,209,210,219,254,261,265,],[-123,-84,-108,42,-84,47,51,-112,92,-103,94,95,106,-89,108,122,108,-89,-119,-90,108,-90,-113,108,108,108,-90,108,108,181,108,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-90,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-119,-90,108,]),'CTE_INT':([38,64,91,92,94,104,105,106,107,108,122,128,131,132,133,135,156,163,164,166,167,168,169,170,171,174,175,178,179,181,184,198,199,200,201,202,203,204,205,206,207,208,209,210,219,254,261,265,],[45,85,-89,117,117,-89,-119,-90,117,-90,117,117,117,-90,117,117,117,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-90,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-119,-90,117,]),'PARDER':([42,47,49,50,51,55,57,61,82,96,98,106,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,133,137,138,139,140,141,142,144,145,146,147,149,150,151,152,157,158,159,161,165,172,173,176,177,180,181,183,185,186,188,193,194,196,210,212,213,218,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,237,239,241,243,246,248,252,255,256,257,259,262,264,266,272,273,],[-80,54,56,-19,-80,-83,63,-109,-80,-18,-21,-90,136,-93,-92,-94,-95,-96,-70,-85,-86,-87,-88,-75,-76,148,-106,-107,-98,-80,-50,-52,-80,-80,-80,-71,-72,-73,-74,182,-80,-80,187,-83,-115,-114,-46,196,-53,-60,-61,-64,-65,-68,-90,-38,-41,-39,-109,217,-80,-91,-80,-40,-80,-45,-48,-69,-49,-51,-54,-55,-56,-57,-58,-59,-62,-63,-66,-67,-115,-20,-91,-114,252,-80,-80,-91,-120,-79,-47,-116,-122,-44,-77,-91,-78,]),'CORDER':([45,52,85,101,110,111,112,113,114,115,116,117,118,119,120,121,137,138,139,140,141,142,144,145,146,165,172,173,176,177,180,192,196,216,221,223,224,225,226,227,228,229,230,231,232,233,234,239,246,252,255,256,259,262,264,266,268,270,272,273,],[-117,58,-117,130,-93,-92,-94,-95,-96,-70,-85,-86,-87,-88,-75,-76,-50,-52,-80,-80,-80,-71,-72,-73,-74,-53,-60,-61,-64,-65,-68,-121,-91,239,-69,-49,-51,-54,-55,-56,-57,-58,-59,-62,-63,-66,-67,-91,-80,-91,-120,-79,-116,-122,-44,-77,-121,272,-91,-78,]),'LLVEIZQ':([54,56,63,136,162,182,211,250,258,],[60,62,84,-100,197,-104,236,-102,263,]),'LLVEDER':([60,67,68,69,70,71,72,73,74,75,84,88,100,129,148,187,195,197,214,215,217,222,236,240,242,244,247,249,251,253,260,263,267,269,271,],[-80,87,-80,-30,-23,-24,-25,-26,-27,-28,-110,-29,-80,154,-37,-42,-32,-80,238,-31,-91,242,-80,-116,-101,253,-43,-33,-35,-105,-36,-80,269,-101,-34,]),'IF':([60,62,68,70,71,72,73,74,75,83,84,100,148,187,195,197,215,217,236,240,242,247,249,251,253,260,263,269,271,],[78,-110,78,-23,-24,-25,-26,-27,-28,78,-110,78,-37,-42,-32,78,-31,-91,78,-116,-101,-43,-33,-35,-105,-36,78,-101,-34,]),'WHILE':([60,62,68,70,71,72,73,74,75,83,84,100,148,187,195,197,215,217,236,240,242,247,249,251,253,260,263,269,271,],[79,-110,79,-23,-24,-25,-26,-27,-28,79,-110,79,-37,-42,-32,79,-31,-91,79,-116,-101,-43,-33,-35,-105,-36,79,-101,-34,]),'PRINT':([60,62,68,70,71,72,73,74,75,83,84,100,148,187,195,197,215,217,236,240,242,247,249,251,253,260,263,269,271,],[80,-110,80,-23,-24,-25,-26,-27,-28,80,-110,80,-37,-42,-32,80,-31,-91,80,-116,-101,-43,-33,-35,-105,-36,80,-101,-34,]),'READ':([60,62,68,70,71,72,73,74,75,83,84,100,148,187,195,197,215,217,236,240,242,247,249,251,253,260,263,269,271,],[81,-110,81,-23,-24,-25,-26,-27,-28,81,-110,81,-37,-42,-32,81,-31,-91,81,-116,-101,-43,-33,-35,-105,-36,81,-101,-34,]),'RETURN':([62,68,69,70,71,72,73,74,75,83,88,99,148,187,195,215,217,240,242,247,249,251,253,260,269,271,],[-110,-80,-30,-23,-24,-25,-26,-27,-28,-80,-29,128,-37,-42,-32,-31,-91,-116,-101,-43,-33,-35,-105,-36,-101,-34,]),'ASIGN':([76,77,89,239,246,255,256,262,266,272,273,],[-85,91,104,-91,-80,-120,-79,-122,-77,-91,-78,]),'CTE_FLT':([91,92,94,104,105,106,107,108,122,128,131,132,133,135,156,163,164,166,167,168,169,170,171,174,175,178,179,181,184,198,199,200,201,202,203,204,205,206,207,208,209,210,219,254,261,265,],[-89,118,118,-89,-119,-90,118,-90,118,118,118,-90,118,118,118,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-90,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-119,-90,118,]),'CTE_CHAR':([91,92,94,104,105,106,107,108,122,128,131,132,133,135,156,163,164,166,167,168,169,170,171,174,175,178,179,181,184,198,199,200,201,202,203,204,205,206,207,208,209,210,219,254,261,265,],[-89,119,119,-89,-119,-90,119,-90,119,119,119,-90,119,119,119,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-90,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-119,-90,119,]),'CTE_STR':([94,184,],[125,125,]),'OR':([110,111,112,113,114,115,116,117,118,119,120,121,137,138,139,140,141,142,144,145,146,165,172,173,176,177,180,196,221,224,225,226,227,228,229,230,231,232,233,234,239,246,252,255,256,259,262,264,266,272,273,],[-93,-92,-94,-95,-96,-70,-85,-86,-87,-88,-75,-76,163,-52,-80,-80,-80,-71,-72,-73,-74,-53,-60,-61,-64,-65,-68,-91,-69,-51,-54,-55,-56,-57,-58,-59,-62,-63,-66,-67,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'AND':([111,112,113,114,115,116,117,118,119,120,121,138,139,140,141,142,144,145,146,165,172,173,176,177,180,196,221,225,226,227,228,229,230,231,232,233,234,239,246,252,255,256,259,262,264,266,272,273,],[-92,-94,-95,-96,-70,-85,-86,-87,-88,-75,-76,164,-80,-80,-80,-71,-72,-73,-74,-53,-60,-61,-64,-65,-68,-91,-69,-54,-55,-56,-57,-58,-59,-62,-63,-66,-67,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'LT':([112,113,114,115,116,117,118,119,120,121,139,140,141,142,144,145,146,173,176,177,180,196,221,231,232,233,234,239,246,252,255,256,259,262,264,266,272,273,],[-94,-95,-96,-70,-85,-86,-87,-88,-75,-76,166,-80,-80,-71,-72,-73,-74,-61,-64,-65,-68,-91,-69,-62,-63,-66,-67,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'GT':([112,113,114,115,116,117,118,119,120,121,139,140,141,142,144,145,146,173,176,177,180,196,221,231,232,233,234,239,246,252,255,256,259,262,264,266,272,273,],[-94,-95,-96,-70,-85,-86,-87,-88,-75,-76,167,-80,-80,-71,-72,-73,-74,-61,-64,-65,-68,-91,-69,-62,-63,-66,-67,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'DIFF':([112,113,114,115,116,117,118,119,120,121,139,140,141,142,144,145,146,173,176,177,180,196,221,231,232,233,234,239,246,252,255,256,259,262,264,266,272,273,],[-94,-95,-96,-70,-85,-86,-87,-88,-75,-76,168,-80,-80,-71,-72,-73,-74,-61,-64,-65,-68,-91,-69,-62,-63,-66,-67,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'LTE':([112,113,114,115,116,117,118,119,120,121,139,140,141,142,144,145,146,173,176,177,180,196,221,231,232,233,234,239,246,252,255,256,259,262,264,266,272,273,],[-94,-95,-96,-70,-85,-86,-87,-88,-75,-76,169,-80,-80,-71,-72,-73,-74,-61,-64,-65,-68,-91,-69,-62,-63,-66,-67,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'GTE':([112,113,114,115,116,117,118,119,120,121,139,140,141,142,144,145,146,173,176,177,180,196,221,231,232,233,234,239,246,252,255,256,259,262,264,266,272,273,],[-94,-95,-96,-70,-85,-86,-87,-88,-75,-76,170,-80,-80,-71,-72,-73,-74,-61,-64,-65,-68,-91,-69,-62,-63,-66,-67,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'EQUAL':([112,113,114,115,116,117,118,119,120,121,139,140,141,142,144,145,146,173,176,177,180,196,221,231,232,233,234,239,246,252,255,256,259,262,264,266,272,273,],[-94,-95,-96,-70,-85,-86,-87,-88,-75,-76,171,-80,-80,-71,-72,-73,-74,-61,-64,-65,-68,-91,-69,-62,-63,-66,-67,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'MAS':([113,114,115,116,117,118,119,120,121,140,141,142,144,145,146,177,180,196,221,233,234,239,246,252,255,256,259,262,264,266,272,273,],[-95,-96,-70,-85,-86,-87,-88,-75,-76,174,-80,-71,-72,-73,-74,-65,-68,-91,-69,-66,-67,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'MENOS':([113,114,115,116,117,118,119,120,121,140,141,142,144,145,146,177,180,196,221,233,234,239,246,252,255,256,259,262,264,266,272,273,],[-95,-96,-70,-85,-86,-87,-88,-75,-76,175,-80,-71,-72,-73,-74,-65,-68,-91,-69,-66,-67,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'MULT':([114,115,116,117,118,119,120,121,141,142,144,145,146,196,221,239,246,252,255,256,259,262,264,266,272,273,],[-96,-70,-85,-86,-87,-88,-75,-76,178,-71,-72,-73,-74,-91,-69,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'DIV':([114,115,116,117,118,119,120,121,141,142,144,145,146,196,221,239,246,252,255,256,259,262,264,266,272,273,],[-96,-70,-85,-86,-87,-88,-75,-76,179,-71,-72,-73,-74,-91,-69,-91,-80,-91,-120,-79,-116,-122,-44,-77,-91,-78,]),'ELSE':([242,],[250,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'CREATE_DIRFUNC':([2,],[3,]),'VARS_P':([5,7,],[6,14,]),'VARS':([5,7,],[7,7,]),'empty':([5,6,7,11,33,42,51,53,58,60,68,82,83,100,133,139,140,141,149,150,194,197,210,213,236,246,248,263,],[8,12,8,12,40,50,50,40,66,69,69,98,69,69,159,172,176,180,185,185,220,69,159,98,69,256,220,69,]),'FUNCS_P':([6,11,],[10,22,]),'FUNCS':([6,11,],[11,11,]),'TYPE':([9,13,42,51,97,],[15,23,48,48,127,]),'MAIN_G':([10,],[20,]),'CURR_TYPE':([16,17,18,19,24,],[26,27,28,29,32,]),'ADD_VAR':([25,46,55,152,],[33,53,61,188,]),'set_start':([30,],[34,]),'ADD_FUNC':([31,36,],[35,43,]),'VARS_PP':([33,53,],[37,59,]),'change_func':([34,],[41,]),'PARAMS':([42,51,],[49,57,]),'add_dim':([45,85,],[52,101,]),'MAT_AUX':([58,],[65,]),'ESTATUTO_P':([60,68,83,100,197,236,263,],[67,88,99,129,222,244,267,]),'ESTATUTO':([60,68,83,100,197,236,263,],[68,68,68,68,68,68,68,]),'ASIGNACION':([60,68,83,100,197,236,263,],[70,70,70,70,70,70,70,]),'CONDICION':([60,68,83,100,197,236,263,],[71,71,71,71,71,71,71,]),'LOOP_WHILE':([60,68,83,100,197,236,263,],[72,72,72,72,72,72,72,]),'ESCRITURA':([60,68,83,100,197,236,263,],[73,73,73,73,73,73,73,]),'LECTURA':([60,68,83,100,197,236,263,],[74,74,74,74,74,74,74,]),'FUNC_CALL':([60,68,83,100,197,236,263,],[75,75,75,75,75,75,75,]),'VAR_DIM':([60,68,83,92,94,100,107,122,128,131,133,135,156,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,219,236,263,265,],[77,77,77,121,121,77,121,121,121,121,121,121,121,121,77,121,121,121,121,121,121,121,121,121,121,121,121,121,121,77,77,121,]),'update_param_table':([61,188,],[82,213,]),'func_jump':([62,84,],[83,100,]),'actAddr':([65,],[86,]),'pila_operando_id':([76,116,],[89,142,]),'ver_func_id_era':([76,],[90,]),'add_jump':([79,],[93,]),'PARAMS_P':([82,213,],[96,237,]),'endProg':([87,],[103,]),'pila_operadores_add':([91,104,163,164,166,167,168,169,170,171,174,175,178,179,],[107,131,198,199,200,201,202,203,204,205,206,207,208,209,]),'EXPRESION':([92,94,107,122,128,131,133,135,156,184,198,210,219,265,],[109,124,134,147,153,155,158,161,192,124,223,158,241,268,]),'EXPRE':([92,94,107,122,128,131,133,135,156,184,198,199,210,219,265,],[110,110,110,110,110,110,110,110,110,110,110,224,110,110,110,]),'EXPR':([92,94,107,122,128,131,133,135,156,184,198,199,200,201,202,203,204,205,210,219,265,],[111,111,111,111,111,111,111,111,111,111,111,111,225,226,227,228,229,230,111,111,111,]),'EXP':([92,94,107,122,128,131,133,135,156,184,198,199,200,201,202,203,204,205,206,207,210,219,265,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,231,232,112,112,112,]),'TERM':([92,94,107,122,128,131,133,135,156,184,198,199,200,201,202,203,204,205,206,207,208,209,210,219,265,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,233,234,113,113,113,]),'FACTOR':([92,94,107,122,128,131,133,135,156,184,198,199,200,201,202,203,204,205,206,207,208,209,210,219,265,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'VAR_CTE':([92,94,107,122,128,131,133,135,156,184,198,199,200,201,202,203,204,205,206,207,208,209,210,219,265,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'FUNC_CALL_EXP':([92,94,107,122,128,131,133,135,156,184,198,199,200,201,202,203,204,205,206,207,208,209,210,219,265,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'PRINTABLE':([94,184,],[123,212,]),'ver_dim':([105,254,],[132,261,]),'fondo_falso_add':([106,108,132,181,261,],[133,135,156,210,265,]),'cuad_or':([110,],[137,]),'cuad_and':([111,],[138,]),'cuad_comp':([112,],[139,]),'cuad_sumres':([113,],[140,]),'cuad_muldiv':([114,],[141,]),'ver_func_id_era_exp':([116,],[143,]),'pila_operando_int':([117,],[144,]),'pila_operando_float':([118,],[145,]),'pila_operando_char':([119,],[146,]),'cuad_print':([124,],[149,]),'cuad_print_str':([125,],[150,]),'cuad_read':([126,],[151,]),'PARM':([133,210,],[157,235,]),'cuad_asign':([134,155,],[160,191,]),'ver_if':([136,],[162,]),'EXPR_P':([139,],[165,]),'EXP_P':([140,],[173,]),'TERM_P':([141,],[177,]),'PRINTABLE_P':([149,150,],[183,186,]),'cuad_return':([153,],[189,]),'endFunc':([154,238,],[190,245,]),'ver_param_num':([157,235,],[193,243,]),'ver_param':([158,241,],[194,248,]),'ver_while':([182,],[211,]),'cuad_ver':([192,268,],[216,270,]),'PARM_P':([194,248,],[218,257,]),'fondo_falso_pop':([196,217,239,252,272,],[221,240,246,259,273,]),'cuad_gosub':([240,259,],[247,264,]),'CONDICION_P':([242,],[249,]),'if_end':([242,269,],[251,271,]),'matAux':([246,],[255,]),'else_jump':([250,],[258,]),'while_end':([253,],[260,]),'ver_dir_num':([255,],[262,]),'cuad_var_dim':([262,],[266,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM CREATE_DIRFUNC ID PTOCOMA VARS_P FUNCS_P MAIN_G','PROGRAMA',7,'p_PROGRAMA','NyParser.py',34),
  ('VARS -> VAR TYPE ID ADD_VAR VARS_PP PTOCOMA','VARS',6,'p_VARS','NyParser.py',39),
  ('VARS -> VAR TYPE ID ADD_VAR CORIZQ CTE_INT add_dim CORDER MAT_AUX actAddr PTOCOMA','VARS',11,'p_VARS','NyParser.py',40),
  ('VARS_P -> VARS VARS_P','VARS_P',2,'p_VARS_P','NyParser.py',45),
  ('VARS_P -> empty','VARS_P',1,'p_VARS_P','NyParser.py',46),
  ('VARS_PP -> COMMA ID ADD_VAR VARS_PP','VARS_PP',4,'p_VARS_PP','NyParser.py',51),
  ('VARS_PP -> empty','VARS_PP',1,'p_VARS_PP','NyParser.py',52),
  ('MAT_AUX -> CORIZQ CTE_INT add_dim CORDER','MAT_AUX',4,'p_MAT_AUX','NyParser.py',57),
  ('MAT_AUX -> empty','MAT_AUX',1,'p_MAT_AUX','NyParser.py',58),
  ('FUNCS -> FUNC TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P RETURN EXPRESION cuad_return PTOCOMA LLVEDER endFunc','FUNCS',16,'p_FUNCS','NyParser.py',63),
  ('FUNCS -> FUNC VOID CURR_TYPE ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ func_jump ESTATUTO_P LLVEDER endFunc','FUNCS',13,'p_FUNCS','NyParser.py',64),
  ('FUNCS_P -> FUNCS FUNCS_P','FUNCS_P',2,'p_FUNCS_P','NyParser.py',69),
  ('FUNCS_P -> empty','FUNCS_P',1,'p_FUNCS_P','NyParser.py',70),
  ('TYPE -> INT CURR_TYPE','TYPE',2,'p_TYPE','NyParser.py',75),
  ('TYPE -> FLOAT CURR_TYPE','TYPE',2,'p_TYPE','NyParser.py',76),
  ('TYPE -> BOOL CURR_TYPE','TYPE',2,'p_TYPE','NyParser.py',77),
  ('TYPE -> CHAR CURR_TYPE','TYPE',2,'p_TYPE','NyParser.py',78),
  ('PARAMS -> TYPE ID ADD_VAR update_param_table PARAMS_P','PARAMS',5,'p_PARAMS','NyParser.py',83),
  ('PARAMS -> empty','PARAMS',1,'p_PARAMS','NyParser.py',84),
  ('PARAMS_P -> COMMA TYPE ID ADD_VAR update_param_table PARAMS_P','PARAMS_P',6,'p_PARAMS_P','NyParser.py',89),
  ('PARAMS_P -> empty','PARAMS_P',1,'p_PARAMS_P','NyParser.py',90),
  ('MAIN_G -> VOID MAIN set_start change_func PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER endProg','MAIN_G',10,'p_MAIN_G','NyParser.py',95),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','NyParser.py',100),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','NyParser.py',101),
  ('ESTATUTO -> LOOP_WHILE','ESTATUTO',1,'p_ESTATUTO','NyParser.py',102),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','NyParser.py',103),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','NyParser.py',104),
  ('ESTATUTO -> FUNC_CALL','ESTATUTO',1,'p_ESTATUTO','NyParser.py',105),
  ('ESTATUTO_P -> ESTATUTO ESTATUTO_P','ESTATUTO_P',2,'p_ESTATUTO_P','NyParser.py',110),
  ('ESTATUTO_P -> empty','ESTATUTO_P',1,'p_ESTATUTO_P','NyParser.py',111),
  ('ASIGNACION -> ID pila_operando_id ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA','ASIGNACION',7,'p_ASIGNACION','NyParser.py',116),
  ('ASIGNACION -> VAR_DIM ASIGN pila_operadores_add EXPRESION cuad_asign PTOCOMA','ASIGNACION',6,'p_ASIGNACION','NyParser.py',117),
  ('CONDICION -> IF PARIZQ EXPRESION PARDER ver_if LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P','CONDICION',9,'p_CONDICION','NyParser.py',122),
  ('CONDICION_P -> ELSE else_jump LLVEIZQ ESTATUTO_P LLVEDER if_end','CONDICION_P',6,'p_CONDICION_P','NyParser.py',127),
  ('CONDICION_P -> if_end','CONDICION_P',1,'p_CONDICION_P','NyParser.py',128),
  ('LOOP_WHILE -> WHILE add_jump PARIZQ EXPRESION PARDER ver_while LLVEIZQ ESTATUTO_P LLVEDER while_end','LOOP_WHILE',10,'p_LOOP_WHILE','NyParser.py',133),
  ('ESCRITURA -> PRINT PARIZQ PRINTABLE PARDER','ESCRITURA',4,'p_ESCRITURA','NyParser.py',138),
  ('PRINTABLE -> EXPRESION cuad_print PRINTABLE_P','PRINTABLE',3,'p_PRINTABLE','NyParser.py',143),
  ('PRINTABLE -> CTE_STR cuad_print_str PRINTABLE_P','PRINTABLE',3,'p_PRINTABLE','NyParser.py',144),
  ('PRINTABLE_P -> COMMA PRINTABLE','PRINTABLE_P',2,'p_PRINTABLE_P','NyParser.py',149),
  ('PRINTABLE_P -> empty','PRINTABLE_P',1,'p_PRINTABLE_P','NyParser.py',150),
  ('LECTURA -> READ PARIZQ ID cuad_read PARDER','LECTURA',5,'p_LECTURA','NyParser.py',155),
  ('FUNC_CALL -> ID ver_func_id_era PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub','FUNC_CALL',9,'p_FUNC_CALL','NyParser.py',160),
  ('FUNC_CALL_EXP -> ID ver_func_id_era_exp PARIZQ fondo_falso_add PARM ver_param_num PARDER fondo_falso_pop cuad_gosub','FUNC_CALL_EXP',9,'p_FUNC_CALL_EXP','NyParser.py',165),
  ('PARM -> EXPRESION ver_param PARM_P','PARM',3,'p_PARM','NyParser.py',170),
  ('PARM -> empty','PARM',1,'p_PARM','NyParser.py',171),
  ('PARM_P -> COMMA EXPRESION ver_param PARM_P','PARM_P',4,'p_PARM_P','NyParser.py',176),
  ('PARM_P -> empty','PARM_P',1,'p_PARM_P','NyParser.py',177),
  ('EXPRESION -> EXPRE cuad_or OR pila_operadores_add EXPRESION','EXPRESION',5,'p_EXPRESION','NyParser.py',182),
  ('EXPRESION -> EXPRE cuad_or','EXPRESION',2,'p_EXPRESION','NyParser.py',183),
  ('EXPRE -> EXPR cuad_and AND pila_operadores_add EXPRE','EXPRE',5,'p_EXPRE','NyParser.py',188),
  ('EXPRE -> EXPR cuad_and','EXPRE',2,'p_EXPRE','NyParser.py',189),
  ('EXPR -> EXP cuad_comp EXPR_P','EXPR',3,'p_EXPR','NyParser.py',194),
  ('EXPR_P -> LT pila_operadores_add EXPR','EXPR_P',3,'p_EXPR_P','NyParser.py',199),
  ('EXPR_P -> GT pila_operadores_add EXPR','EXPR_P',3,'p_EXPR_P','NyParser.py',200),
  ('EXPR_P -> DIFF pila_operadores_add EXPR','EXPR_P',3,'p_EXPR_P','NyParser.py',201),
  ('EXPR_P -> LTE pila_operadores_add EXPR','EXPR_P',3,'p_EXPR_P','NyParser.py',202),
  ('EXPR_P -> GTE pila_operadores_add EXPR','EXPR_P',3,'p_EXPR_P','NyParser.py',203),
  ('EXPR_P -> EQUAL pila_operadores_add EXPR','EXPR_P',3,'p_EXPR_P','NyParser.py',204),
  ('EXPR_P -> empty','EXPR_P',1,'p_EXPR_P','NyParser.py',205),
  ('EXP -> TERM cuad_sumres EXP_P','EXP',3,'p_EXP','NyParser.py',210),
  ('EXP_P -> MAS pila_operadores_add EXP','EXP_P',3,'p_EXP_P','NyParser.py',215),
  ('EXP_P -> MENOS pila_operadores_add EXP','EXP_P',3,'p_EXP_P','NyParser.py',216),
  ('EXP_P -> empty','EXP_P',1,'p_EXP_P','NyParser.py',217),
  ('TERM -> FACTOR cuad_muldiv TERM_P','TERM',3,'p_TERM','NyParser.py',222),
  ('TERM_P -> MULT pila_operadores_add TERM','TERM_P',3,'p_TERM_P','NyParser.py',227),
  ('TERM_P -> DIV pila_operadores_add TERM','TERM_P',3,'p_TERM_P','NyParser.py',228),
  ('TERM_P -> empty','TERM_P',1,'p_TERM_P','NyParser.py',229),
  ('FACTOR -> PARIZQ fondo_falso_add EXPRESION PARDER fondo_falso_pop','FACTOR',5,'p_FACTOR','NyParser.py',234),
  ('FACTOR -> VAR_CTE','FACTOR',1,'p_FACTOR','NyParser.py',235),
  ('VAR_CTE -> ID pila_operando_id','VAR_CTE',2,'p_VAR_CTE','NyParser.py',247),
  ('VAR_CTE -> CTE_INT pila_operando_int','VAR_CTE',2,'p_VAR_CTE','NyParser.py',248),
  ('VAR_CTE -> CTE_FLT pila_operando_float','VAR_CTE',2,'p_VAR_CTE','NyParser.py',249),
  ('VAR_CTE -> CTE_CHAR pila_operando_char','VAR_CTE',2,'p_VAR_CTE','NyParser.py',250),
  ('VAR_CTE -> FUNC_CALL_EXP','VAR_CTE',1,'p_VAR_CTE','NyParser.py',251),
  ('VAR_CTE -> VAR_DIM','VAR_CTE',1,'p_VAR_CTE','NyParser.py',252),
  ('VAR_DIM -> ID pila_operando_id CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop matAux ver_dir_num cuad_var_dim','VAR_DIM',12,'p_VAR_DIM','NyParser.py',258),
  ('matAux -> CORIZQ ver_dim fondo_falso_add EXPRESION cuad_ver CORDER fondo_falso_pop','matAux',7,'p_matAux','NyParser.py',263),
  ('matAux -> empty','matAux',1,'p_matAux','NyParser.py',264),
  ('empty -> <empty>','empty',0,'p_empty','NyParser.py',268),
  ('CREATE_DIRFUNC -> <empty>','CREATE_DIRFUNC',0,'p_CREATE_DIRFUNC','NyParser.py',307),
  ('CURR_TYPE -> <empty>','CURR_TYPE',0,'p_CURR_TYPE','NyParser.py',313),
  ('ADD_VAR -> <empty>','ADD_VAR',0,'p_ADD_VAR','NyParser.py',319),
  ('ADD_FUNC -> <empty>','ADD_FUNC',0,'p_ADD_FUNC','NyParser.py',334),
  ('pila_operando_id -> <empty>','pila_operando_id',0,'p_pila_operando_id','NyParser.py',352),
  ('pila_operando_int -> <empty>','pila_operando_int',0,'p_pila_operando_int','NyParser.py',369),
  ('pila_operando_float -> <empty>','pila_operando_float',0,'p_pila_operando_float','NyParser.py',381),
  ('pila_operando_char -> <empty>','pila_operando_char',0,'p_pila_operando_char','NyParser.py',393),
  ('pila_operadores_add -> <empty>','pila_operadores_add',0,'p_pila_operadores_add','NyParser.py',405),
  ('fondo_falso_add -> <empty>','fondo_falso_add',0,'p_fondo_falso_add','NyParser.py',411),
  ('fondo_falso_pop -> <empty>','fondo_falso_pop',0,'p_fondo_falso_pop','NyParser.py',417),
  ('cuad_and -> <empty>','cuad_and',0,'p_cuad_and','NyParser.py',426),
  ('cuad_or -> <empty>','cuad_or',0,'p_cuad_or','NyParser.py',430),
  ('cuad_comp -> <empty>','cuad_comp',0,'p_cuad_comp','NyParser.py',435),
  ('cuad_sumres -> <empty>','cuad_sumres',0,'p_cuad_sumres','NyParser.py',440),
  ('cuad_muldiv -> <empty>','cuad_muldiv',0,'p_cuad_muldiv','NyParser.py',445),
  ('cuad_asign -> <empty>','cuad_asign',0,'p_cuad_asign','NyParser.py',450),
  ('cuad_read -> <empty>','cuad_read',0,'p_cuad_read','NyParser.py',486),
  ('cuad_return -> <empty>','cuad_return',0,'p_cuad_return','NyParser.py',497),
  ('ver_if -> <empty>','ver_if',0,'p_ver_if','NyParser.py',509),
  ('if_end -> <empty>','if_end',0,'p_if_end','NyParser.py',521),
  ('else_jump -> <empty>','else_jump',0,'p_else_jump','NyParser.py',528),
  ('add_jump -> <empty>','add_jump',0,'p_add_jump','NyParser.py',536),
  ('ver_while -> <empty>','ver_while',0,'p_ver_while','NyParser.py',542),
  ('while_end -> <empty>','while_end',0,'p_while_end','NyParser.py',554),
  ('cuad_print -> <empty>','cuad_print',0,'p_cuad_print','NyParser.py',563),
  ('cuad_print_str -> <empty>','cuad_print_str',0,'p_cuad_print_str','NyParser.py',570),
  ('change_func -> <empty>','change_func',0,'p_change_func','NyParser.py',577),
  ('update_param_table -> <empty>','update_param_table',0,'p_update_param_table','NyParser.py',587),
  ('func_jump -> <empty>','func_jump',0,'p_func_jump','NyParser.py',596),
  ('endFunc -> <empty>','endFunc',0,'p_endFunc','NyParser.py',605),
  ('ver_func_id_era -> <empty>','ver_func_id_era',0,'p_ver_func_id_era','NyParser.py',617),
  ('ver_func_id_era_exp -> <empty>','ver_func_id_era_exp',0,'p_ver_func_id_era_exp','NyParser.py',631),
  ('ver_param -> <empty>','ver_param',0,'p_ver_param','NyParser.py',645),
  ('ver_param_num -> <empty>','ver_param_num',0,'p_ver_param_num','NyParser.py',661),
  ('cuad_gosub -> <empty>','cuad_gosub',0,'p_cuad_gosub','NyParser.py',670),
  ('add_dim -> <empty>','add_dim',0,'p_add_dim','NyParser.py',691),
  ('actAddr -> <empty>','actAddr',0,'p_actAddr','NyParser.py',705),
  ('ver_dim -> <empty>','ver_dim',0,'p_ver_dim','NyParser.py',723),
  ('ver_dir_num -> <empty>','ver_dir_num',0,'p_ver_dim_num','NyParser.py',735),
  ('cuad_ver -> <empty>','cuad_ver',0,'p_cuad_ver','NyParser.py',742),
  ('cuad_var_dim -> <empty>','cuad_var_dim',0,'p_cuad_var_dim','NyParser.py',754),
  ('set_start -> <empty>','set_start',0,'p_set_start','NyParser.py',791),
  ('endProg -> <empty>','endProg',0,'p_endProg','NyParser.py',797),
]
