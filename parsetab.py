
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGN BOOL CHAR COMMA COMMENT CORDER CORIZQ CTE_CHAR CTE_FLT CTE_INT CTE_STR DIFF DIV DOSPTOS ELSE EQUAL FLOAT FOR FUNC GT GTE ID IF INT LLVEDER LLVEIZQ LT LTE MAIN MAS MAT MENOS MULT OR PARDER PARIZQ PRINT PROGRAM PTOCOMA PUNTO RETURN VAR VOID\n    PROGRAMA : PROGRAM CREATE_DIRFUNC ID PTOCOMA VARS_P FUNCS_P MAIN_G\n    \n    VARS : VAR TYPE ID ADD_VAR VARS_PP PTOCOMA\n         | MAT TYPE ID CORIZQ CTE_INT CORDER VARS_PPP PTOCOMA\n    \n    VARS_P : VARS VARS_P\n           | empty   \n    \n    VARS_PP : COMMA ID ADD_VAR VARS_PP\n            | empty\n    \n    VARS_PPP : CORIZQ CTE_INT CORDER\n             | empty\n    \n    FUNCS : FUNC TYPE_P ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ ESTATUTO_P RETURN EXPRESION PTOCOMA LLVEDER\n    \n    FUNCS_P : FUNCS FUNCS_P\n            | empty\n    \n    TYPE : INT CURR_TYPE\n         | FLOAT CURR_TYPE\n         | BOOL CURR_TYPE\n         | CHAR CURR_TYPE\n    \n    TYPE_P : TYPE\n           | VOID CURR_TYPE\n    \n    PARAMS : TYPE ID ADD_VAR PARAMS_P\n           | empty\n    \n    PARAMS_P : COMMA TYPE ID ADD_VAR PARAMS_P\n             | empty\n    \n    MAIN_G : VOID MAIN PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER\n    \n    ESTATUTO : ASIGNACION\n             | CONDICION\n             | LOOP_FOR\n             | ESCRITURA\n             | FUNC_CALL   \n    \n    ESTATUTO_P : ESTATUTO ESTATUTO_P\n               | empty\n    \n    ASIGNACION : ID ASIGN EXPRESION PTOCOMA\n               | ID ASIGN FUNC_CALL\n    \n    CONDICION : IF PARIZQ EXPRESION PARDER LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P\n    \n    CONDICION_P : ELSE LLVEIZQ ESTATUTO_P LLVEDER\n                | empty\n    \n    LOOP_FOR : FOR PARIZQ CTE_INT COMMA CTE_INT COMMA CTE_INT PARDER LLVEIZQ ESTATUTO_P LLVEDER\n    \n    ESCRITURA : PRINT PARIZQ PRINTABLE PRINTABLE_P PARDER\n    \n    PRINTABLE : EXPRESION\n              | CTE_STR\n    \n    PRINTABLE_P : COMMA PRINTABLE PRINTABLE_P\n                | empty\n    \n    FUNC_CALL : ID PARIZQ PARM PARDER\n    \n    PARM : PARM_P\n         | empty\n    \n    PARM_P : CTE_INT PARM_PP\n           | CTE_FLT PARM_PP\n           | ID PARM_PP\n    \n    PARM_PP : COMMA PARM_P\n             | empty\n    \n    EXPRESION : EXPR EXPRESION_P\n    \n    EXPRESION_P : OR pila_operadores_add EXPR\n                | AND pila_operadores_add EXPR\n                | empty\n    \n    EXPR : EXP EXPR_P\n    \n    EXPR_P : LT pila_operadores_add EXP\n           | GT pila_operadores_add EXP\n           | DIFF pila_operadores_add EXP\n           | LTE pila_operadores_add EXP\n           | GTE pila_operadores_add EXP\n           | EQUAL pila_operadores_add EXP\n           | empty\n    \n    EXP : TERM  EXP_P\n    \n    EXP_P : MAS pila_operadores_add TERM EXP_P\n          | MENOS pila_operadores_add TERM EXP_P\n          | empty\n    \n    TERM : FACTOR TERM_P\n    \n    TERM_P : MULT pila_operadores_add FACTOR TERM_P\n           | DIV pila_operadores_add FACTOR TERM_P\n           | empty\n    \n    FACTOR : PARIZQ pila_operadores_add EXPRESION PARDER pila_operadores_add\n           | FACTOR_P VAR_CTE\n    \n    FACTOR_P : MAS pila_operadores_add\n             | MENOS pila_operadores_add\n             | empty\n    \n    VAR_CTE : ID pila_operando_id\n            | CTE_INT pila_operando_int\n            | CTE_FLT pila_operando_float\n            | CTE_CHAR pila_operando_char\n    empty :CREATE_DIRFUNC :CURR_TYPE :ADD_VAR :ADD_FUNC :pila_operando_id :pila_operando_int :pila_operando_float :pila_operando_char :pila_operadores_add :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,22,75,],[0,-1,-23,]),'ID':([2,3,16,17,18,19,20,21,25,26,27,29,30,31,32,36,42,50,52,59,61,62,63,64,65,77,78,79,81,82,87,89,93,94,95,96,112,114,115,117,119,120,121,122,123,124,127,128,131,132,139,140,142,144,150,152,153,154,155,157,158,159,160,161,162,163,164,165,166,172,174,201,205,207,209,210,213,214,],[-80,4,28,-81,-81,-81,-81,33,35,-17,-81,-13,-14,-15,-16,-18,48,66,71,66,-24,-25,-26,-27,-28,85,97,-79,-79,66,-32,-88,135,-88,-88,-74,-31,-88,-88,-79,-88,-88,-88,-88,-88,-88,-88,-88,-88,-88,-72,-73,97,-42,-79,-79,177,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,66,-37,-79,-33,-35,66,66,-34,-36,]),'PTOCOMA':([4,28,37,41,43,48,49,54,56,57,72,84,86,88,90,91,92,113,116,118,125,126,129,130,133,134,135,136,137,138,167,168,169,170,176,178,179,180,181,182,183,184,185,186,187,188,189,190,196,197,198,199,200,],[5,-82,-79,47,-7,-82,-79,-79,74,-9,-6,-8,112,-79,-79,-79,-79,-50,-53,-54,-61,-62,-65,-66,-69,-71,-84,-85,-86,-87,-75,-76,-77,-78,194,-51,-52,-88,-55,-56,-57,-58,-59,-60,-79,-79,-79,-79,-70,-63,-64,-67,-68,]),'VAR':([5,7,47,74,],[9,9,-2,-3,]),'MAT':([5,7,47,74,],[10,10,-2,-3,]),'FUNC':([5,6,7,8,12,15,47,74,203,],[-79,14,-79,-5,14,-4,-2,-3,-10,]),'VOID':([5,6,7,8,11,12,13,14,15,24,47,74,203,],[-79,-79,-79,-5,23,-79,-12,27,-4,-11,-2,-3,-10,]),'INT':([9,10,14,46,110,],[17,17,17,17,17,]),'FLOAT':([9,10,14,46,110,],[18,18,18,18,18,]),'BOOL':([9,10,14,46,110,],[19,19,19,19,19,]),'CHAR':([9,10,14,46,110,],[20,20,20,20,20,]),'MAIN':([23,],[34,]),'COMMA':([28,37,48,54,71,83,88,90,91,92,97,101,102,104,105,106,107,113,116,118,125,126,129,130,133,134,135,136,137,138,167,168,169,170,173,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,195,196,197,198,199,200,],[-82,42,-82,42,-82,110,-79,-79,-79,-79,142,142,142,148,150,-38,-39,-50,-53,-54,-61,-62,-65,-66,-69,-71,-84,-85,-86,-87,-75,-76,-77,-78,192,150,-82,-51,-52,-88,-55,-56,-57,-58,-59,-60,-79,-79,-79,-79,110,-70,-63,-64,-67,-68,]),'CORIZQ':([33,49,],[38,55,]),'PARIZQ':([34,35,40,66,67,68,69,77,79,81,85,89,114,115,117,119,120,121,122,123,124,127,128,131,132,150,152,154,155,157,158,159,160,161,162,163,164,165,166,],[39,-83,46,78,79,80,81,89,89,89,78,-88,-88,-88,89,-88,-88,-88,-88,-88,-88,-88,-88,-88,-88,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'CTE_INT':([38,55,77,78,79,80,81,89,93,94,95,96,114,115,117,119,120,121,122,123,124,127,128,131,132,139,140,142,148,150,152,154,155,157,158,159,160,161,162,163,164,165,166,192,],[44,73,-79,101,-79,104,-79,-88,136,-88,-88,-74,-88,-88,-79,-88,-88,-88,-88,-88,-88,-88,-88,-88,-88,-72,-73,101,173,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,202,]),'PARDER':([39,46,51,53,71,78,83,88,90,91,92,97,98,99,100,101,102,103,105,106,107,109,111,113,116,118,125,126,129,130,133,134,135,136,137,138,141,143,145,146,149,151,156,167,168,169,170,171,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,193,195,196,197,198,199,200,202,204,],[45,-79,70,-20,-82,-79,-79,-79,-79,-79,-79,-79,144,-43,-44,-79,-79,147,-79,-38,-39,-19,-22,-50,-53,-54,-61,-62,-65,-66,-69,-71,-84,-85,-86,-87,-47,-49,-45,-46,174,-41,180,-75,-76,-77,-78,-48,-79,-82,-51,-52,-88,-55,-56,-57,-58,-59,-60,-79,-79,-79,-79,-40,-79,-70,-63,-64,-67,-68,208,-21,]),'CORDER':([44,73,],[49,84,]),'LLVEIZQ':([45,70,147,206,208,],[50,82,172,209,210,]),'LLVEDER':([50,58,59,60,61,62,63,64,65,76,87,112,144,172,174,191,194,201,205,207,209,210,211,212,213,214,],[-79,75,-79,-30,-24,-25,-26,-27,-28,-29,-32,-31,-42,-79,-37,201,203,-79,-33,-35,-79,-79,213,214,-34,-36,]),'IF':([50,59,61,62,63,64,65,82,87,112,144,172,174,201,205,207,209,210,213,214,],[67,67,-24,-25,-26,-27,-28,67,-32,-31,-42,67,-37,-79,-33,-35,67,67,-34,-36,]),'FOR':([50,59,61,62,63,64,65,82,87,112,144,172,174,201,205,207,209,210,213,214,],[68,68,-24,-25,-26,-27,-28,68,-32,-31,-42,68,-37,-79,-33,-35,68,68,-34,-36,]),'PRINT':([50,59,61,62,63,64,65,82,87,112,144,172,174,201,205,207,209,210,213,214,],[69,69,-24,-25,-26,-27,-28,69,-32,-31,-42,69,-37,-79,-33,-35,69,69,-34,-36,]),'RETURN':([59,60,61,62,63,64,65,76,82,87,108,112,144,174,201,205,207,213,214,],[-79,-30,-24,-25,-26,-27,-28,-29,-79,-32,152,-31,-42,-37,-79,-33,-35,-34,-36,]),'ASIGN':([66,],[77,]),'MAS':([77,79,81,89,91,92,114,115,117,119,120,121,122,123,124,127,128,130,131,132,133,134,135,136,137,138,150,152,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,180,187,188,189,190,196,199,200,],[94,94,94,-88,127,-79,-88,-88,94,-88,-88,-88,-88,-88,-88,-88,-88,-66,-88,-88,-69,-71,-84,-85,-86,-87,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-75,-76,-77,-78,-88,127,127,-79,-79,-70,-67,-68,]),'MENOS':([77,79,81,89,91,92,114,115,117,119,120,121,122,123,124,127,128,130,131,132,133,134,135,136,137,138,150,152,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,180,187,188,189,190,196,199,200,],[95,95,95,-88,128,-79,-88,-88,95,-88,-88,-88,-88,-88,-88,-88,-88,-66,-88,-88,-69,-71,-84,-85,-86,-87,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-75,-76,-77,-78,-88,128,128,-79,-79,-70,-67,-68,]),'CTE_FLT':([77,78,79,81,89,93,94,95,96,114,115,117,119,120,121,122,123,124,127,128,131,132,139,140,142,150,152,154,155,157,158,159,160,161,162,163,164,165,166,],[-79,102,-79,-79,-88,137,-88,-88,-74,-88,-88,-79,-88,-88,-88,-88,-88,-88,-88,-88,-88,-88,-72,-73,102,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,]),'CTE_CHAR':([77,79,81,89,93,94,95,96,114,115,117,119,120,121,122,123,124,127,128,131,132,139,140,150,152,154,155,157,158,159,160,161,162,163,164,165,166,],[-79,-79,-79,-88,138,-88,-88,-74,-88,-88,-79,-88,-88,-88,-88,-88,-88,-88,-88,-88,-88,-72,-73,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,]),'CTE_STR':([81,150,],[107,107,]),'OR':([88,90,91,92,118,125,126,129,130,133,134,135,136,137,138,167,168,169,170,180,181,182,183,184,185,186,187,188,189,190,196,197,198,199,200,],[114,-79,-79,-79,-54,-61,-62,-65,-66,-69,-71,-84,-85,-86,-87,-75,-76,-77,-78,-88,-55,-56,-57,-58,-59,-60,-79,-79,-79,-79,-70,-63,-64,-67,-68,]),'AND':([88,90,91,92,118,125,126,129,130,133,134,135,136,137,138,167,168,169,170,180,181,182,183,184,185,186,187,188,189,190,196,197,198,199,200,],[115,-79,-79,-79,-54,-61,-62,-65,-66,-69,-71,-84,-85,-86,-87,-75,-76,-77,-78,-88,-55,-56,-57,-58,-59,-60,-79,-79,-79,-79,-70,-63,-64,-67,-68,]),'LT':([90,91,92,126,129,130,133,134,135,136,137,138,167,168,169,170,180,187,188,189,190,196,197,198,199,200,],[119,-79,-79,-62,-65,-66,-69,-71,-84,-85,-86,-87,-75,-76,-77,-78,-88,-79,-79,-79,-79,-70,-63,-64,-67,-68,]),'GT':([90,91,92,126,129,130,133,134,135,136,137,138,167,168,169,170,180,187,188,189,190,196,197,198,199,200,],[120,-79,-79,-62,-65,-66,-69,-71,-84,-85,-86,-87,-75,-76,-77,-78,-88,-79,-79,-79,-79,-70,-63,-64,-67,-68,]),'DIFF':([90,91,92,126,129,130,133,134,135,136,137,138,167,168,169,170,180,187,188,189,190,196,197,198,199,200,],[121,-79,-79,-62,-65,-66,-69,-71,-84,-85,-86,-87,-75,-76,-77,-78,-88,-79,-79,-79,-79,-70,-63,-64,-67,-68,]),'LTE':([90,91,92,126,129,130,133,134,135,136,137,138,167,168,169,170,180,187,188,189,190,196,197,198,199,200,],[122,-79,-79,-62,-65,-66,-69,-71,-84,-85,-86,-87,-75,-76,-77,-78,-88,-79,-79,-79,-79,-70,-63,-64,-67,-68,]),'GTE':([90,91,92,126,129,130,133,134,135,136,137,138,167,168,169,170,180,187,188,189,190,196,197,198,199,200,],[123,-79,-79,-62,-65,-66,-69,-71,-84,-85,-86,-87,-75,-76,-77,-78,-88,-79,-79,-79,-79,-70,-63,-64,-67,-68,]),'EQUAL':([90,91,92,126,129,130,133,134,135,136,137,138,167,168,169,170,180,187,188,189,190,196,197,198,199,200,],[124,-79,-79,-62,-65,-66,-69,-71,-84,-85,-86,-87,-75,-76,-77,-78,-88,-79,-79,-79,-79,-70,-63,-64,-67,-68,]),'MULT':([92,134,135,136,137,138,167,168,169,170,180,189,190,196,],[131,-71,-84,-85,-86,-87,-75,-76,-77,-78,-88,131,131,-70,]),'DIV':([92,134,135,136,137,138,167,168,169,170,180,189,190,196,],[132,-71,-84,-85,-86,-87,-75,-76,-77,-78,-88,132,132,-70,]),'ELSE':([201,],[206,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'CREATE_DIRFUNC':([2,],[3,]),'VARS_P':([5,7,],[6,15,]),'VARS':([5,7,],[7,7,]),'empty':([5,6,7,12,37,46,49,50,54,59,77,78,79,81,82,83,88,90,91,92,97,101,102,105,117,150,152,154,155,157,158,159,160,161,162,163,164,165,166,172,175,187,188,189,190,195,201,209,210,],[8,13,8,13,43,53,57,60,43,60,96,100,96,96,60,111,116,125,129,133,143,143,143,151,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,60,151,129,129,133,133,111,207,60,60,]),'FUNCS_P':([6,12,],[11,24,]),'FUNCS':([6,12,],[12,12,]),'TYPE':([9,10,14,46,110,],[16,21,26,52,153,]),'MAIN_G':([11,],[22,]),'TYPE_P':([14,],[25,]),'CURR_TYPE':([17,18,19,20,27,],[29,30,31,32,36,]),'ADD_VAR':([28,48,71,177,],[37,54,83,195,]),'ADD_FUNC':([35,],[40,]),'VARS_PP':([37,54,],[41,72,]),'PARAMS':([46,],[51,]),'VARS_PPP':([49,],[56,]),'ESTATUTO_P':([50,59,82,172,209,210,],[58,76,108,191,211,212,]),'ESTATUTO':([50,59,82,172,209,210,],[59,59,59,59,59,59,]),'ASIGNACION':([50,59,82,172,209,210,],[61,61,61,61,61,61,]),'CONDICION':([50,59,82,172,209,210,],[62,62,62,62,62,62,]),'LOOP_FOR':([50,59,82,172,209,210,],[63,63,63,63,63,63,]),'ESCRITURA':([50,59,82,172,209,210,],[64,64,64,64,64,64,]),'FUNC_CALL':([50,59,77,82,172,209,210,],[65,65,87,65,65,65,65,]),'EXPRESION':([77,79,81,117,150,152,],[86,103,106,156,106,176,]),'EXPR':([77,79,81,117,150,152,154,155,],[88,88,88,88,88,88,178,179,]),'EXP':([77,79,81,117,150,152,154,155,157,158,159,160,161,162,],[90,90,90,90,90,90,90,90,181,182,183,184,185,186,]),'TERM':([77,79,81,117,150,152,154,155,157,158,159,160,161,162,163,164,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,187,188,]),'FACTOR':([77,79,81,117,150,152,154,155,157,158,159,160,161,162,163,164,165,166,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,189,190,]),'FACTOR_P':([77,79,81,117,150,152,154,155,157,158,159,160,161,162,163,164,165,166,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'PARM':([78,],[98,]),'PARM_P':([78,142,],[99,171,]),'PRINTABLE':([81,150,],[105,175,]),'PARAMS_P':([83,195,],[109,204,]),'EXPRESION_P':([88,],[113,]),'pila_operadores_add':([89,94,95,114,115,119,120,121,122,123,124,127,128,131,132,180,],[117,139,140,154,155,157,158,159,160,161,162,163,164,165,166,196,]),'EXPR_P':([90,],[118,]),'EXP_P':([91,187,188,],[126,197,198,]),'TERM_P':([92,189,190,],[130,199,200,]),'VAR_CTE':([93,],[134,]),'PARM_PP':([97,101,102,],[141,145,146,]),'PRINTABLE_P':([105,175,],[149,193,]),'pila_operando_id':([135,],[167,]),'pila_operando_int':([136,],[168,]),'pila_operando_float':([137,],[169,]),'pila_operando_char':([138,],[170,]),'CONDICION_P':([201,],[205,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM CREATE_DIRFUNC ID PTOCOMA VARS_P FUNCS_P MAIN_G','PROGRAMA',7,'p_PROGRAMA','NyParser.py',18),
  ('VARS -> VAR TYPE ID ADD_VAR VARS_PP PTOCOMA','VARS',6,'p_VARS','NyParser.py',23),
  ('VARS -> MAT TYPE ID CORIZQ CTE_INT CORDER VARS_PPP PTOCOMA','VARS',8,'p_VARS','NyParser.py',24),
  ('VARS_P -> VARS VARS_P','VARS_P',2,'p_VARS_P','NyParser.py',29),
  ('VARS_P -> empty','VARS_P',1,'p_VARS_P','NyParser.py',30),
  ('VARS_PP -> COMMA ID ADD_VAR VARS_PP','VARS_PP',4,'p_VARS_PP','NyParser.py',35),
  ('VARS_PP -> empty','VARS_PP',1,'p_VARS_PP','NyParser.py',36),
  ('VARS_PPP -> CORIZQ CTE_INT CORDER','VARS_PPP',3,'p_VARS_PPP','NyParser.py',41),
  ('VARS_PPP -> empty','VARS_PPP',1,'p_VARS_PPP','NyParser.py',42),
  ('FUNCS -> FUNC TYPE_P ID ADD_FUNC PARIZQ PARAMS PARDER LLVEIZQ ESTATUTO_P RETURN EXPRESION PTOCOMA LLVEDER','FUNCS',13,'p_FUNCS','NyParser.py',47),
  ('FUNCS_P -> FUNCS FUNCS_P','FUNCS_P',2,'p_FUNCS_P','NyParser.py',52),
  ('FUNCS_P -> empty','FUNCS_P',1,'p_FUNCS_P','NyParser.py',53),
  ('TYPE -> INT CURR_TYPE','TYPE',2,'p_TYPE','NyParser.py',58),
  ('TYPE -> FLOAT CURR_TYPE','TYPE',2,'p_TYPE','NyParser.py',59),
  ('TYPE -> BOOL CURR_TYPE','TYPE',2,'p_TYPE','NyParser.py',60),
  ('TYPE -> CHAR CURR_TYPE','TYPE',2,'p_TYPE','NyParser.py',61),
  ('TYPE_P -> TYPE','TYPE_P',1,'p_TYPE_P','NyParser.py',66),
  ('TYPE_P -> VOID CURR_TYPE','TYPE_P',2,'p_TYPE_P','NyParser.py',67),
  ('PARAMS -> TYPE ID ADD_VAR PARAMS_P','PARAMS',4,'p_PARAMS','NyParser.py',72),
  ('PARAMS -> empty','PARAMS',1,'p_PARAMS','NyParser.py',73),
  ('PARAMS_P -> COMMA TYPE ID ADD_VAR PARAMS_P','PARAMS_P',5,'p_PARAMS_P','NyParser.py',78),
  ('PARAMS_P -> empty','PARAMS_P',1,'p_PARAMS_P','NyParser.py',79),
  ('MAIN_G -> VOID MAIN PARIZQ PARDER LLVEIZQ ESTATUTO_P LLVEDER','MAIN_G',7,'p_MAIN_G','NyParser.py',84),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','NyParser.py',89),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','NyParser.py',90),
  ('ESTATUTO -> LOOP_FOR','ESTATUTO',1,'p_ESTATUTO','NyParser.py',91),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','NyParser.py',92),
  ('ESTATUTO -> FUNC_CALL','ESTATUTO',1,'p_ESTATUTO','NyParser.py',93),
  ('ESTATUTO_P -> ESTATUTO ESTATUTO_P','ESTATUTO_P',2,'p_ESTATUTO_P','NyParser.py',98),
  ('ESTATUTO_P -> empty','ESTATUTO_P',1,'p_ESTATUTO_P','NyParser.py',99),
  ('ASIGNACION -> ID ASIGN EXPRESION PTOCOMA','ASIGNACION',4,'p_ASIGNACION','NyParser.py',104),
  ('ASIGNACION -> ID ASIGN FUNC_CALL','ASIGNACION',3,'p_ASIGNACION','NyParser.py',105),
  ('CONDICION -> IF PARIZQ EXPRESION PARDER LLVEIZQ ESTATUTO_P LLVEDER CONDICION_P','CONDICION',8,'p_CONDICION','NyParser.py',110),
  ('CONDICION_P -> ELSE LLVEIZQ ESTATUTO_P LLVEDER','CONDICION_P',4,'p_CONDICION_P','NyParser.py',115),
  ('CONDICION_P -> empty','CONDICION_P',1,'p_CONDICION_P','NyParser.py',116),
  ('LOOP_FOR -> FOR PARIZQ CTE_INT COMMA CTE_INT COMMA CTE_INT PARDER LLVEIZQ ESTATUTO_P LLVEDER','LOOP_FOR',11,'p_LOOP_FOR','NyParser.py',121),
  ('ESCRITURA -> PRINT PARIZQ PRINTABLE PRINTABLE_P PARDER','ESCRITURA',5,'p_ESCRITURA','NyParser.py',126),
  ('PRINTABLE -> EXPRESION','PRINTABLE',1,'p_PRINTABLE','NyParser.py',131),
  ('PRINTABLE -> CTE_STR','PRINTABLE',1,'p_PRINTABLE','NyParser.py',132),
  ('PRINTABLE_P -> COMMA PRINTABLE PRINTABLE_P','PRINTABLE_P',3,'p_PRINTABLE_P','NyParser.py',137),
  ('PRINTABLE_P -> empty','PRINTABLE_P',1,'p_PRINTABLE_P','NyParser.py',138),
  ('FUNC_CALL -> ID PARIZQ PARM PARDER','FUNC_CALL',4,'p_FUNC_CALL','NyParser.py',143),
  ('PARM -> PARM_P','PARM',1,'p_PARM','NyParser.py',148),
  ('PARM -> empty','PARM',1,'p_PARM','NyParser.py',149),
  ('PARM_P -> CTE_INT PARM_PP','PARM_P',2,'p_PARM_P','NyParser.py',154),
  ('PARM_P -> CTE_FLT PARM_PP','PARM_P',2,'p_PARM_P','NyParser.py',155),
  ('PARM_P -> ID PARM_PP','PARM_P',2,'p_PARM_P','NyParser.py',156),
  ('PARM_PP -> COMMA PARM_P','PARM_PP',2,'p_PARM_PP','NyParser.py',161),
  ('PARM_PP -> empty','PARM_PP',1,'p_PARM_PP','NyParser.py',162),
  ('EXPRESION -> EXPR EXPRESION_P','EXPRESION',2,'p_EXPRESION','NyParser.py',167),
  ('EXPRESION_P -> OR pila_operadores_add EXPR','EXPRESION_P',3,'p_EXPRESION_P','NyParser.py',172),
  ('EXPRESION_P -> AND pila_operadores_add EXPR','EXPRESION_P',3,'p_EXPRESION_P','NyParser.py',173),
  ('EXPRESION_P -> empty','EXPRESION_P',1,'p_EXPRESION_P','NyParser.py',174),
  ('EXPR -> EXP EXPR_P','EXPR',2,'p_EXPR','NyParser.py',179),
  ('EXPR_P -> LT pila_operadores_add EXP','EXPR_P',3,'p_EXPR_P','NyParser.py',184),
  ('EXPR_P -> GT pila_operadores_add EXP','EXPR_P',3,'p_EXPR_P','NyParser.py',185),
  ('EXPR_P -> DIFF pila_operadores_add EXP','EXPR_P',3,'p_EXPR_P','NyParser.py',186),
  ('EXPR_P -> LTE pila_operadores_add EXP','EXPR_P',3,'p_EXPR_P','NyParser.py',187),
  ('EXPR_P -> GTE pila_operadores_add EXP','EXPR_P',3,'p_EXPR_P','NyParser.py',188),
  ('EXPR_P -> EQUAL pila_operadores_add EXP','EXPR_P',3,'p_EXPR_P','NyParser.py',189),
  ('EXPR_P -> empty','EXPR_P',1,'p_EXPR_P','NyParser.py',190),
  ('EXP -> TERM EXP_P','EXP',2,'p_EXP','NyParser.py',195),
  ('EXP_P -> MAS pila_operadores_add TERM EXP_P','EXP_P',4,'p_EXP_P','NyParser.py',200),
  ('EXP_P -> MENOS pila_operadores_add TERM EXP_P','EXP_P',4,'p_EXP_P','NyParser.py',201),
  ('EXP_P -> empty','EXP_P',1,'p_EXP_P','NyParser.py',202),
  ('TERM -> FACTOR TERM_P','TERM',2,'p_TERM','NyParser.py',207),
  ('TERM_P -> MULT pila_operadores_add FACTOR TERM_P','TERM_P',4,'p_TERM_P','NyParser.py',212),
  ('TERM_P -> DIV pila_operadores_add FACTOR TERM_P','TERM_P',4,'p_TERM_P','NyParser.py',213),
  ('TERM_P -> empty','TERM_P',1,'p_TERM_P','NyParser.py',214),
  ('FACTOR -> PARIZQ pila_operadores_add EXPRESION PARDER pila_operadores_add','FACTOR',5,'p_FACTOR','NyParser.py',219),
  ('FACTOR -> FACTOR_P VAR_CTE','FACTOR',2,'p_FACTOR','NyParser.py',220),
  ('FACTOR_P -> MAS pila_operadores_add','FACTOR_P',2,'p_FACTOR_P','NyParser.py',225),
  ('FACTOR_P -> MENOS pila_operadores_add','FACTOR_P',2,'p_FACTOR_P','NyParser.py',226),
  ('FACTOR_P -> empty','FACTOR_P',1,'p_FACTOR_P','NyParser.py',227),
  ('VAR_CTE -> ID pila_operando_id','VAR_CTE',2,'p_VAR_CTE','NyParser.py',232),
  ('VAR_CTE -> CTE_INT pila_operando_int','VAR_CTE',2,'p_VAR_CTE','NyParser.py',233),
  ('VAR_CTE -> CTE_FLT pila_operando_float','VAR_CTE',2,'p_VAR_CTE','NyParser.py',234),
  ('VAR_CTE -> CTE_CHAR pila_operando_char','VAR_CTE',2,'p_VAR_CTE','NyParser.py',235),
  ('empty -> <empty>','empty',0,'p_empty','NyParser.py',239),
  ('CREATE_DIRFUNC -> <empty>','CREATE_DIRFUNC',0,'p_CREATE_DIRFUNC','NyParser.py',281),
  ('CURR_TYPE -> <empty>','CURR_TYPE',0,'p_CURR_TYPE','NyParser.py',286),
  ('ADD_VAR -> <empty>','ADD_VAR',0,'p_ADD_VAR','NyParser.py',291),
  ('ADD_FUNC -> <empty>','ADD_FUNC',0,'p_ADD_FUNC','NyParser.py',301),
  ('pila_operando_id -> <empty>','pila_operando_id',0,'p_pila_operando_id','NyParser.py',311),
  ('pila_operando_int -> <empty>','pila_operando_int',0,'p_pila_operando_int','NyParser.py',327),
  ('pila_operando_float -> <empty>','pila_operando_float',0,'p_pila_operando_float','NyParser.py',333),
  ('pila_operando_char -> <empty>','pila_operando_char',0,'p_pila_operando_char','NyParser.py',339),
  ('pila_operadores_add -> <empty>','pila_operadores_add',0,'p_pila_operadores_add','NyParser.py',344),
]
